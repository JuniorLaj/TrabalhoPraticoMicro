

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 29 00:32:29 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F628A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  0092                     	;# 
    92  0098                     	;# 
    93  0099                     	;# 
    94  009A                     	;# 
    95  009B                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009F                     	;# 
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000E                     	;# 
   110  000E                     	;# 
   111  000F                     	;# 
   112  0010                     	;# 
   113  0011                     	;# 
   114  0012                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001F                     	;# 
   123  0081                     	;# 
   124  0085                     	;# 
   125  0086                     	;# 
   126  008C                     	;# 
   127  008E                     	;# 
   128  0092                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009F                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  008C                     	;# 
   164  008E                     	;# 
   165  0092                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009A                     	;# 
   169  009B                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009F                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  000A                     	;# 
   181  000B                     	;# 
   182  000C                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001F                     	;# 
   197  0081                     	;# 
   198  0085                     	;# 
   199  0086                     	;# 
   200  008C                     	;# 
   201  008E                     	;# 
   202  0092                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009F                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001F                     	;# 
   234  0081                     	;# 
   235  0085                     	;# 
   236  0086                     	;# 
   237  008C                     	;# 
   238  008E                     	;# 
   239  0092                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009F                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  008C                     	;# 
   275  008E                     	;# 
   276  0092                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009F                     	;# 
   284                           
   285                           	psect	strings
   286  0001                     __pstrings:
   287  0001                     stringtab:
   288  0001                     __stringtab:
   289  0001                     stringcode:	
   290                           ;	String table - string pointers are 1 byte each
   291                           
   292  0001                     stringdir:
   293  0001  3000               	movlw	high stringdir
   294  0002  008A               	movwf	10
   295  0003  0804               	movf	4,w
   296  0004  0A84               	incf	4,f
   297  0005  0782               	addwf	2,f
   298  0006                     __stringbase:
   299  0006  3400               	retlw	0
   300  0007                     __end_of__stringtab:
   301  0007                     _linha:
   302  0007  3402               	retlw	2
   303  0008  3404               	retlw	4
   304  0009  3440               	retlw	64
   305  000A  3480               	retlw	128
   306  000B                     __end_of_linha:
   307  000B                     _INTCONbits	set	11
   308  0003                     _STATUSbits	set	3
   309  0006                     _PORTB	set	6
   310  001F                     _CMCON	set	31
   311  0005                     _PORTA	set	5
   312  0035                     _RB5	set	53
   313  0036                     _RB6	set	54
   314  0037                     _RB7	set	55
   315  0028                     _RA0	set	40
   316  0033                     _RB3	set	51
   317  0034                     _RB4	set	52
   318  009D                     _EECON2	set	157
   319  009A                     _EEDATA	set	154
   320  009C                     _EECON1	set	156
   321  009B                     _EEADR	set	155
   322  009C                     _EECON1bits	set	156
   323  0086                     _TRISB	set	134
   324  0085                     _TRISA	set	133
   325  008E                     _PCONbits	set	142
   326  000B                     STR_1:
   327  000B  3450               	retlw	80	;'P'
   328  000C  3472               	retlw	114	;'r'
   329  000D  3465               	retlw	101	;'e'
   330  000E  3473               	retlw	115	;'s'
   331  000F  3473               	retlw	115	;'s'
   332  0010  3469               	retlw	105	;'i'
   333  0011  346F               	retlw	111	;'o'
   334  0012  346E               	retlw	110	;'n'
   335  0013  3465               	retlw	101	;'e'
   336  0014  3420               	retlw	32	;' '
   337  0015  342A               	retlw	42	;'*'
   338  0016  3420               	retlw	32	;' '
   339  0017  3470               	retlw	112	;'p'
   340  0018  3461               	retlw	97	;'a'
   341  0019  3472               	retlw	114	;'r'
   342  001A  3461               	retlw	97	;'a'
   343  001B  3420               	retlw	32	;' '
   344  001C  3465               	retlw	101	;'e'
   345  001D  346E               	retlw	110	;'n'
   346  001E  3474               	retlw	116	;'t'
   347  001F  3472               	retlw	114	;'r'
   348  0020  3461               	retlw	97	;'a'
   349  0021  3472               	retlw	114	;'r'
   350  0022  3420               	retlw	32	;' '
   351  0023  346F               	retlw	111	;'o'
   352  0024  3475               	retlw	117	;'u'
   353  0025  3420               	retlw	32	;' '
   354  0026  3423               	retlw	35	;'#'
   355  0027  3420               	retlw	32	;' '
   356  0028  3470               	retlw	112	;'p'
   357  0029  3461               	retlw	97	;'a'
   358  002A  3472               	retlw	114	;'r'
   359  002B  3461               	retlw	97	;'a'
   360  002C  3420               	retlw	32	;' '
   361  002D  3443               	retlw	67	;'C'
   362  002E  346F               	retlw	111	;'o'
   363  002F  346E               	retlw	110	;'n'
   364  0030  3466               	retlw	102	;'f'
   365  0031  3469               	retlw	105	;'i'
   366  0032  3467               	retlw	103	;'g'
   367  0033  3475               	retlw	117	;'u'
   368  0034  3472               	retlw	114	;'r'
   369  0035  3461               	retlw	97	;'a'
   370  0036  3472               	retlw	114	;'r'
   371  0037  3400               	retlw	0
   372  0038                     STR_3:
   373  0038  3444               	retlw	68	;'D'
   374  0039  3469               	retlw	105	;'i'
   375  003A  3467               	retlw	103	;'g'
   376  003B  3469               	retlw	105	;'i'
   377  003C  3474               	retlw	116	;'t'
   378  003D  3465               	retlw	101	;'e'
   379  003E  3420               	retlw	32	;' '
   380  003F  346F               	retlw	111	;'o'
   381  0040  3420               	retlw	32	;' '
   382  0041  3450               	retlw	80	;'P'
   383  0042  3449               	retlw	73	;'I'
   384  0043  344E               	retlw	78	;'N'
   385  0044  3420               	retlw	32	;' '
   386  0045  3465               	retlw	101	;'e'
   387  0046  3420               	retlw	32	;' '
   388  0047  3461               	retlw	97	;'a'
   389  0048  3470               	retlw	112	;'p'
   390  0049  3465               	retlw	101	;'e'
   391  004A  3472               	retlw	114	;'r'
   392  004B  3474               	retlw	116	;'t'
   393  004C  3465               	retlw	101	;'e'
   394  004D  3420               	retlw	32	;' '
   395  004E  342A               	retlw	42	;'*'
   396  004F  3400               	retlw	0
   397  0050                     STR_2:
   398  0050  3444               	retlw	68	;'D'
   399  0051  3469               	retlw	105	;'i'
   400  0052  3467               	retlw	103	;'g'
   401  0053  3469               	retlw	105	;'i'
   402  0054  3474               	retlw	116	;'t'
   403  0055  3465               	retlw	101	;'e'
   404  0056  3420               	retlw	32	;' '
   405  0057  346F               	retlw	111	;'o'
   406  0058  3420               	retlw	32	;' '
   407  0059  3449               	retlw	73	;'I'
   408  005A  3444               	retlw	68	;'D'
   409  005B  3420               	retlw	32	;' '
   410  005C  3465               	retlw	101	;'e'
   411  005D  3420               	retlw	32	;' '
   412  005E  3461               	retlw	97	;'a'
   413  005F  3470               	retlw	112	;'p'
   414  0060  3465               	retlw	101	;'e'
   415  0061  3472               	retlw	114	;'r'
   416  0062  3474               	retlw	116	;'t'
   417  0063  3465               	retlw	101	;'e'
   418  0064  3420               	retlw	32	;' '
   419  0065  342A               	retlw	42	;'*'
   420  0066  3400               	retlw	0
   421  0067                     STR_4:
   422  0067  3441               	retlw	65	;'A'
   423  0068  3463               	retlw	99	;'c'
   424  0069  3465               	retlw	101	;'e'
   425  006A  3473               	retlw	115	;'s'
   426  006B  3473               	retlw	115	;'s'
   427  006C  346F               	retlw	111	;'o'
   428  006D  3420               	retlw	32	;' '
   429  006E  3470               	retlw	112	;'p'
   430  006F  3465               	retlw	101	;'e'
   431  0070  3472               	retlw	114	;'r'
   432  0071  346D               	retlw	109	;'m'
   433  0072  3469               	retlw	105	;'i'
   434  0073  3474               	retlw	116	;'t'
   435  0074  3469               	retlw	105	;'i'
   436  0075  3464               	retlw	100	;'d'
   437  0076  346F               	retlw	111	;'o'
   438  0077  3421               	retlw	33	;'!'
   439  0078  3400               	retlw	0
   440  0079                     STR_5:
   441  0079  3441               	retlw	65	;'A'
   442  007A  3463               	retlw	99	;'c'
   443  007B  3465               	retlw	101	;'e'
   444  007C  3473               	retlw	115	;'s'
   445  007D  3473               	retlw	115	;'s'
   446  007E  346F               	retlw	111	;'o'
   447  007F  3420               	retlw	32	;' '
   448  0080  344E               	retlw	78	;'N'
   449  0081  3465               	retlw	101	;'e'
   450  0082  3467               	retlw	103	;'g'
   451  0083  3461               	retlw	97	;'a'
   452  0084  3464               	retlw	100	;'d'
   453  0085  346F               	retlw	111	;'o'
   454  0086  3421               	retlw	33	;'!'
   455  0087  3400               	retlw	0
   456                           
   457                           	psect	cinit
   458  07FE                     start_initialization:	
   459                           ; #config settings
   460                           
   461  07FE                     __initialization:
   462  07FE                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  07FE                     __end_of__initialization:
   466  07FE  0183               	clrf	3
   467  07FF  2E9C               	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	cstackCOMMON
   470  0070                     __pcstackCOMMON:
   471  0070                     ?_eeprom_read:
   472  0070                     ??_eeprom_read:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_eeprom_write:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ?_exibirMensagemDigitarPin:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_exibirMensagemAcessoPermitido:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_exibirMensagemAcessoNegado:	
   485                           ; 1 bytes @ 0x0
   486                           
   487  0070                     ?_lcd_wr:	
   488                           ; 1 bytes @ 0x0
   489                           
   490  0070                     ??_lcd_wr:	
   491                           ; 1 bytes @ 0x0
   492                           
   493  0070                     ?_lcd_cmd:	
   494                           ; 1 bytes @ 0x0
   495                           
   496  0070                     ?_lcd_dat:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_lcd_init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_lcd_str:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_main:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_exibirMensagemInicial:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_exibirMensagemDigitarId:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?___bmul:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     eeprom_write@value:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ___bmul@multiplicand:	
   521                           ; 1 bytes @ 0x0
   522                           
   523                           
   524                           ; 1 bytes @ 0x0
   525  0070                     	ds	1
   526  0071                     ??_eeprom_write:
   527  0071                     ??___bmul:	
   528                           ; 1 bytes @ 0x1
   529                           
   530  0071                     lcd_wr@val:	
   531                           ; 1 bytes @ 0x1
   532                           
   533  0071                     eeprom_read@addr:	
   534                           ; 1 bytes @ 0x1
   535                           
   536                           
   537                           ; 1 bytes @ 0x1
   538  0071                     	ds	1
   539  0072                     lcd_wr@i:
   540  0072                     eeprom_write@addr:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     ___bmul@product:	
   544                           ; 1 bytes @ 0x2
   545                           
   546                           
   547                           ; 1 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     ??_lcd_cmd:
   550  0073                     ??_lcd_dat:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ___bmul@multiplier:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558  0073                     	ds	1
   559  0074                     ?_tc_tecla:
   560  0074                     tc_tecla@timeout:	
   561                           ; 1 bytes @ 0x4
   562                           
   563                           
   564                           ; 2 bytes @ 0x4
   565  0074                     	ds	1
   566  0075                     lcd_cmd@val:
   567  0075                     lcd_dat@val:	
   568                           ; 1 bytes @ 0x5
   569                           
   570                           
   571                           ; 1 bytes @ 0x5
   572  0075                     	ds	1
   573  0076                     ??_lcd_init:
   574  0076                     ??_lcd_str:	
   575                           ; 1 bytes @ 0x6
   576                           
   577  0076                     ??_tc_tecla:	
   578                           ; 1 bytes @ 0x6
   579                           
   580                           
   581                           ; 1 bytes @ 0x6
   582  0076                     	ds	1
   583  0077                     lcd_str@i:
   584                           
   585                           ; 1 bytes @ 0x7
   586  0077                     	ds	1
   587  0078                     lcd_str@str:
   588  0078                     tc_tecla@to:	
   589                           ; 1 bytes @ 0x8
   590                           
   591                           
   592                           ; 2 bytes @ 0x8
   593  0078                     	ds	1
   594  0079                     ?_Questao1:
   595  0079                     ?_Questao2:	
   596                           ; 1 bytes @ 0x9
   597                           
   598  0079                     ??_exibirMensagemDigitarPin:	
   599                           ; 1 bytes @ 0x9
   600                           
   601  0079                     ??_exibirMensagemAcessoPermitido:	
   602                           ; 1 bytes @ 0x9
   603                           
   604  0079                     ??_exibirMensagemAcessoNegado:	
   605                           ; 1 bytes @ 0x9
   606                           
   607  0079                     ??_exibirMensagemInicial:	
   608                           ; 1 bytes @ 0x9
   609                           
   610  0079                     ??_exibirMensagemDigitarId:	
   611                           ; 1 bytes @ 0x9
   612                           
   613  0079                     Questao1@modoOperacao:	
   614                           ; 1 bytes @ 0x9
   615                           
   616  0079                     Questao2@modoOperacao:	
   617                           ; 1 bytes @ 0x9
   618                           
   619                           
   620                           ; 1 bytes @ 0x9
   621  0079                     	ds	1
   622  007A                     ??_Questao1:
   623  007A                     tc_tecla@tmp:	
   624                           ; 1 bytes @ 0xA
   625                           
   626  007A                     Questao1@tecla:	
   627                           ; 1 bytes @ 0xA
   628                           
   629  007A                     Questao2@infoDigitada:	
   630                           ; 1 bytes @ 0xA
   631                           
   632                           
   633                           ; 1 bytes @ 0xA
   634  007A                     	ds	1
   635  007B                     ??_Questao2:
   636  007B                     tc_tecla@ret:	
   637                           ; 1 bytes @ 0xB
   638                           
   639                           
   640                           ; 1 bytes @ 0xB
   641  007B                     	ds	1
   642  007C                     tc_tecla@i:
   643  007C                     Questao2@tecla:	
   644                           ; 1 bytes @ 0xC
   645                           
   646                           
   647                           ; 1 bytes @ 0xC
   648  007C                     	ds	1
   649                           
   650                           	psect	cstackBANK0
   651  0020                     __pcstackBANK0:
   652  0020                     ??_main:
   653                           
   654                           ; 1 bytes @ 0x0
   655  0020                     	ds	2
   656  0022                     main@simbolosId:
   657                           
   658                           ; 7 bytes @ 0x2
   659  0022                     	ds	7
   660  0029                     main@simbolosPin:
   661                           
   662                           ; 7 bytes @ 0x9
   663  0029                     	ds	7
   664  0030                     main@countRecordedAccesses:
   665                           
   666                           ; 1 bytes @ 0x10
   667  0030                     	ds	1
   668  0031                     main@countSimbolosPin:
   669                           
   670                           ; 1 bytes @ 0x11
   671  0031                     	ds	1
   672  0032                     main@i_149:
   673                           
   674                           ; 1 bytes @ 0x12
   675  0032                     	ds	1
   676  0033                     main@i:
   677                           
   678                           ; 1 bytes @ 0x13
   679  0033                     	ds	1
   680  0034                     main@j:
   681                           
   682                           ; 1 bytes @ 0x14
   683  0034                     	ds	1
   684  0035                     main@j_150:
   685                           
   686                           ; 1 bytes @ 0x15
   687  0035                     	ds	1
   688  0036                     main@modoOperacao:
   689                           
   690                           ; 1 bytes @ 0x16
   691  0036                     	ds	1
   692  0037                     main@countSimbolosId:
   693                           
   694                           ; 1 bytes @ 0x17
   695  0037                     	ds	1
   696  0038                     main@infoDigitada:
   697                           
   698                           ; 1 bytes @ 0x18
   699  0038                     	ds	1
   700  0039                     main@tecla:
   701                           
   702                           ; 1 bytes @ 0x19
   703  0039                     	ds	1
   704  003A                     main@k:
   705                           
   706                           ; 1 bytes @ 0x1A
   707  003A                     	ds	1
   708  003B                     main@aux:
   709                           
   710                           ; 1 bytes @ 0x1B
   711  003B                     	ds	1
   712                           
   713                           	psect	maintext
   714  069C                     __pmaintext:	
   715 ;;
   716 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   717 ;;
   718 ;; *************** function _main *****************
   719 ;; Defined at:
   720 ;;		line 29 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;  k               1   26[BANK0 ] unsigned char 
   725 ;;  aux             1   27[BANK0 ] unsigned char 
   726 ;;  j               1   21[BANK0 ] unsigned char 
   727 ;;  i               1   18[BANK0 ] unsigned char 
   728 ;;  j               1   20[BANK0 ] unsigned char 
   729 ;;  simbolosPin     7    9[BANK0 ] unsigned char [7]
   730 ;;  simbolosId      7    2[BANK0 ] unsigned char [7]
   731 ;;  tecla           1   25[BANK0 ] unsigned char 
   732 ;;  infoDigitada    1   24[BANK0 ] unsigned char 
   733 ;;  countSimbolo    1   23[BANK0 ] unsigned char 
   734 ;;  modoOperacao    1   22[BANK0 ] unsigned char 
   735 ;;  i               1   19[BANK0 ] unsigned char 
   736 ;;  countSimbolo    1   17[BANK0 ] unsigned char 
   737 ;;  countRecorde    1   16[BANK0 ] unsigned char 
   738 ;;  initTimerDis    1    0        unsigned char 
   739 ;; Return value:  Size  Location     Type
   740 ;;                  1    wreg      void 
   741 ;; Registers used:
   742 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   743 ;; Tracked objects:
   744 ;;		On entry : B00/0
   745 ;;		On exit  : 0/0
   746 ;;		Unchanged: 0/0
   747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   748 ;;      Params:         0       0       0       0
   749 ;;      Locals:         0      26       0       0
   750 ;;      Temps:          0       2       0       0
   751 ;;      Totals:         0      28       0       0
   752 ;;Total ram usage:       28 bytes
   753 ;; Hardware stack levels required when called: 5
   754 ;; This function calls:
   755 ;;		_Questao1
   756 ;;		_Questao2
   757 ;;		_eeprom_read
   758 ;;		_eeprom_write
   759 ;;		_exibirMensagemAcessoNegado
   760 ;;		_exibirMensagemAcessoPermitido
   761 ;;		_exibirMensagemDigitarPin
   762 ;;		_lcd_cmd
   763 ;;		_lcd_dat
   764 ;;		_lcd_init
   765 ;;		_tc_tecla
   766 ;; This function is called by:
   767 ;;		Startup code after reset
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _main
   773  069C                     _main:
   774  069C                     l1384:	
   775                           ;incstack = 0
   776                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   777                           
   778                           
   779                           ;main.c: 30:     unsigned char modoOperacao = 0;
   780  069C  1283               	bcf	3,5	;RP0=0, select bank0
   781  069D  1303               	bcf	3,6	;RP1=0, select bank0
   782  069E  01B6               	clrf	main@modoOperacao
   783                           
   784                           ;main.c: 31:     unsigned char tecla;;main.c: 32:     unsigned char infoDigitada = 0;
   785  069F  01B8               	clrf	main@infoDigitada
   786                           
   787                           ;main.c: 33:     unsigned char simbolosId[7];;main.c: 34:     unsigned char countSimbolo
      +                          sId = 0;
   788  06A0  01B7               	clrf	main@countSimbolosId
   789                           
   790                           ;main.c: 35:     unsigned char simbolosPin[7];;main.c: 36:     unsigned char countSimbol
      +                          osPin = 0;
   791  06A1  01B1               	clrf	main@countSimbolosPin
   792  06A2                     l1386:
   793                           
   794                           ;main.c: 38:     PCONbits.OSCF = 1;
   795  06A2  1683               	bsf	3,5	;RP0=1, select bank1
   796  06A3  1303               	bcf	3,6	;RP1=0, select bank1
   797  06A4  158E               	bsf	14,3	;volatile
   798  06A5                     l1388:
   799                           
   800                           ;main.c: 40:     CMCON = 0x07;
   801  06A5  3007               	movlw	7
   802  06A6  1283               	bcf	3,5	;RP0=0, select bank0
   803  06A7  1303               	bcf	3,6	;RP1=0, select bank0
   804  06A8  009F               	movwf	31	;volatile
   805  06A9                     l1390:
   806                           
   807                           ;main.c: 41:     TRISA = 0x30;
   808  06A9  3030               	movlw	48
   809  06AA  1683               	bsf	3,5	;RP0=1, select bank1
   810  06AB  1303               	bcf	3,6	;RP1=0, select bank1
   811  06AC  0085               	movwf	5	;volatile
   812  06AD                     l1392:
   813                           
   814                           ;main.c: 42:     TRISB = 0xE7;
   815  06AD  30E7               	movlw	231
   816  06AE  0086               	movwf	6	;volatile
   817  06AF                     l1394:
   818                           
   819                           ;main.c: 44:     PORTA = 0xFE;
   820  06AF  30FE               	movlw	254
   821  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   822  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   823  06B2  0085               	movwf	5	;volatile
   824                           
   825                           ;main.c: 45:     PORTB = 0x00;
   826  06B3  0186               	clrf	6	;volatile
   827  06B4                     l1396:
   828                           
   829                           ;main.c: 47:     lcd_init();
   830  06B4  258D               	fcall	_lcd_init
   831  06B5                     l1398:
   832                           
   833                           ;main.c: 48:     lcd_cmd(0x01);
   834  06B5  3001               	movlw	1
   835  06B6  24F9               	fcall	_lcd_cmd
   836  06B7                     l1400:
   837                           
   838                           ;main.c: 49:     lcd_cmd(0xC0);
   839  06B7  30C0               	movlw	192
   840  06B8  24F9               	fcall	_lcd_cmd
   841  06B9                     l1402:
   842                           
   843                           ;main.c: 50:     lcd_cmd(0x01);
   844  06B9  3001               	movlw	1
   845  06BA  24F9               	fcall	_lcd_cmd
   846  06BB                     l1404:
   847                           
   848                           ;main.c: 51:     lcd_cmd(0x80);
   849  06BB  3080               	movlw	128
   850  06BC  24F9               	fcall	_lcd_cmd
   851  06BD                     l1406:
   852                           
   853                           ;main.c: 55:     unsigned char countRecordedAccesses = eeprom_read(0);
   854  06BD  3000               	movlw	0
   855  06BE  249F               	fcall	_eeprom_read
   856  06BF  1283               	bcf	3,5	;RP0=0, select bank0
   857  06C0  1303               	bcf	3,6	;RP1=0, select bank0
   858  06C1  00A0               	movwf	??_main
   859  06C2  0820               	movf	??_main,w
   860  06C3  00B0               	movwf	main@countRecordedAccesses
   861  06C4                     l1408:
   862                           
   863                           ;main.c: 58:     unsigned char i;;main.c: 59:     for(i=countRecordedAccesses; i<0xFF; i
      +                          ++){
   864  06C4  0830               	movf	main@countRecordedAccesses,w
   865  06C5  00A0               	movwf	??_main
   866  06C6  0820               	movf	??_main,w
   867  06C7  00B3               	movwf	main@i
   868  06C8                     l1410:
   869  06C8  0A33               	incf	main@i,w
   870  06C9  1D03               	btfss	3,2
   871  06CA  2ECC               	goto	u871
   872  06CB  2ECD               	goto	u870
   873  06CC                     u871:
   874  06CC  2ECE               	goto	l1414
   875  06CD                     u870:
   876  06CD  2EF1               	goto	l1428
   877  06CE                     l1414:
   878                           
   879                           ;main.c: 60:         unsigned char j;;main.c: 61:         for(j=0; j<8; j++){
   880  06CE  01B4               	clrf	main@j
   881  06CF                     l1420:
   882                           
   883                           ;main.c: 62:             eeprom_write(i*16 + j,0x00);
   884  06CF  01F0               	clrf	eeprom_write@value
   885  06D0  0833               	movf	main@i,w
   886  06D1  00A0               	movwf	??_main
   887  06D2  3004               	movlw	4
   888  06D3                     u885:
   889  06D3  1003               	clrc
   890  06D4  0DA0               	rlf	??_main,f
   891  06D5  3EFF               	addlw	-1
   892  06D6  1D03               	skipz
   893  06D7  2ED3               	goto	u885
   894  06D8  0834               	movf	main@j,w
   895  06D9  0720               	addwf	??_main,w
   896  06DA  2564               	fcall	_eeprom_write
   897  06DB                     l1422:
   898                           
   899                           ;main.c: 63:         }
   900  06DB  3001               	movlw	1
   901  06DC  1283               	bcf	3,5	;RP0=0, select bank0
   902  06DD  1303               	bcf	3,6	;RP1=0, select bank0
   903  06DE  00A0               	movwf	??_main
   904  06DF  0820               	movf	??_main,w
   905  06E0  07B4               	addwf	main@j,f
   906  06E1                     l1424:
   907  06E1  3008               	movlw	8
   908  06E2  0234               	subwf	main@j,w
   909  06E3  1C03               	skipc
   910  06E4  2EE6               	goto	u891
   911  06E5  2EE7               	goto	u890
   912  06E6                     u891:
   913  06E6  2ECF               	goto	l1420
   914  06E7                     u890:
   915  06E7                     l1426:
   916                           
   917                           ;main.c: 64:     }
   918  06E7  3001               	movlw	1
   919  06E8  00A0               	movwf	??_main
   920  06E9  0820               	movf	??_main,w
   921  06EA  07B3               	addwf	main@i,f
   922  06EB  0A33               	incf	main@i,w
   923  06EC  1D03               	btfss	3,2
   924  06ED  2EEF               	goto	u901
   925  06EE  2EF0               	goto	u900
   926  06EF                     u901:
   927  06EF  2ECE               	goto	l1414
   928  06F0                     u900:
   929  06F0  2EF1               	goto	l1428
   930  06F1                     l112:
   931  06F1                     l1428:
   932                           
   933                           ;main.c: 82:         tecla = tc_tecla(5000);
   934  06F1  3088               	movlw	136
   935  06F2  00F4               	movwf	tc_tecla@timeout
   936  06F3  3013               	movlw	19
   937  06F4  00F5               	movwf	tc_tecla@timeout+1
   938  06F5  25BD               	fcall	_tc_tecla
   939  06F6  1283               	bcf	3,5	;RP0=0, select bank0
   940  06F7  1303               	bcf	3,6	;RP1=0, select bank0
   941  06F8  00A0               	movwf	??_main
   942  06F9  0820               	movf	??_main,w
   943  06FA  00B9               	movwf	main@tecla
   944                           
   945                           ;main.c: 84:         Questao1(tecla, modoOperacao);
   946  06FB  0836               	movf	main@modoOperacao,w
   947  06FC  00A0               	movwf	??_main
   948  06FD  0820               	movf	??_main,w
   949  06FE  00F9               	movwf	Questao1@modoOperacao
   950  06FF  0839               	movf	main@tecla,w
   951  0700  2491               	fcall	_Questao1
   952                           
   953                           ;main.c: 86:         Questao2(tecla, &modoOperacao, &infoDigitada);
   954  0701  3036               	movlw	(low (main@modoOperacao| 0))& (0+255)
   955  0702  1283               	bcf	3,5	;RP0=0, select bank0
   956  0703  1303               	bcf	3,6	;RP1=0, select bank0
   957  0704  00A0               	movwf	??_main
   958  0705  0820               	movf	??_main,w
   959  0706  00F9               	movwf	Questao2@modoOperacao
   960  0707  3038               	movlw	(low (main@infoDigitada| 0))& (0+255)
   961  0708  00A1               	movwf	??_main+1
   962  0709  0821               	movf	??_main+1,w
   963  070A  00FA               	movwf	Questao2@infoDigitada
   964  070B  0839               	movf	main@tecla,w
   965  070C  24DB               	fcall	_Questao2
   966  070D                     l1430:
   967                           
   968                           ;main.c: 90:         if(tecla == 35 && modoOperacao == 2) {
   969  070D  3023               	movlw	35
   970  070E  1283               	bcf	3,5	;RP0=0, select bank0
   971  070F  1303               	bcf	3,6	;RP1=0, select bank0
   972  0710  0639               	xorwf	main@tecla,w
   973  0711  1D03               	btfss	3,2
   974  0712  2F14               	goto	u911
   975  0713  2F15               	goto	u910
   976  0714                     u911:
   977  0714  2FBC               	goto	l1500
   978  0715                     u910:
   979  0715                     l1432:
   980  0715  3002               	movlw	2
   981  0716  0636               	xorwf	main@modoOperacao,w
   982  0717  1D03               	btfss	3,2
   983  0718  2F1A               	goto	u921
   984  0719  2F1B               	goto	u920
   985  071A                     u921:
   986  071A  2FBC               	goto	l1500
   987  071B                     u920:
   988  071B                     l1434:
   989                           
   990                           ;main.c: 92:             if(infoDigitada == 1){
   991  071B  0338               	decf	main@infoDigitada,w
   992  071C  1D03               	btfss	3,2
   993  071D  2F1F               	goto	u931
   994  071E  2F20               	goto	u930
   995  071F                     u931:
   996  071F  2F2C               	goto	l1442
   997  0720                     u930:
   998  0720                     l1436:
   999                           
  1000                           ;main.c: 93:                 lcd_cmd(0xC0);
  1001  0720  30C0               	movlw	192
  1002  0721  24F9               	fcall	_lcd_cmd
  1003                           
  1004                           ;main.c: 94:                 lcd_cmd(0x01);
  1005  0722  3001               	movlw	1
  1006  0723  24F9               	fcall	_lcd_cmd
  1007  0724                     l1438:
  1008                           
  1009                           ;main.c: 95:                 infoDigitada = 2;
  1010  0724  3002               	movlw	2
  1011  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1012  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1013  0727  00A0               	movwf	??_main
  1014  0728  0820               	movf	??_main,w
  1015  0729  00B8               	movwf	main@infoDigitada
  1016  072A                     l1440:
  1017                           
  1018                           ;main.c: 96:                 exibirMensagemDigitarPin();
  1019  072A  2488               	fcall	_exibirMensagemDigitarPin
  1020                           
  1021                           ;main.c: 97:             } else if(infoDigitada == 2){
  1022  072B  2FBC               	goto	l1500
  1023  072C                     l1442:
  1024  072C  3002               	movlw	2
  1025  072D  0638               	xorwf	main@infoDigitada,w
  1026  072E  1D03               	btfss	3,2
  1027  072F  2F31               	goto	u941
  1028  0730  2F32               	goto	u940
  1029  0731                     u941:
  1030  0731  2FBC               	goto	l1500
  1031  0732                     u940:
  1032  0732                     l1444:
  1033  0732                     l1446:
  1034                           
  1035                           ;main.c: 100:                 for(aux=countSimbolosId; aux<7; aux++){
  1036  0732  0837               	movf	main@countSimbolosId,w
  1037  0733  00A0               	movwf	??_main
  1038  0734  0820               	movf	??_main,w
  1039  0735  00BB               	movwf	main@aux
  1040  0736                     l1448:
  1041  0736  3007               	movlw	7
  1042  0737  023B               	subwf	main@aux,w
  1043  0738  1C03               	skipc
  1044  0739  2F3B               	goto	u951
  1045  073A  2F3C               	goto	u950
  1046  073B                     u951:
  1047  073B  2F3D               	goto	l1452
  1048  073C                     u950:
  1049  073C  2F47               	goto	l1458
  1050  073D                     l1452:
  1051                           
  1052                           ;main.c: 101:                     simbolosId[aux] = 0x00;
  1053  073D  083B               	movf	main@aux,w
  1054  073E  3E22               	addlw	(low (main@simbolosId| 0))& (0+255)
  1055  073F  0084               	movwf	4
  1056  0740  1383               	bcf	3,7	;select IRP bank0
  1057  0741  0180               	clrf	0
  1058  0742                     l1454:
  1059                           
  1060                           ;main.c: 102:                 }
  1061  0742  3001               	movlw	1
  1062  0743  00A0               	movwf	??_main
  1063  0744  0820               	movf	??_main,w
  1064  0745  07BB               	addwf	main@aux,f
  1065  0746  2F36               	goto	l1448
  1066  0747                     l1458:
  1067                           
  1068                           ;main.c: 103:                 for(aux=countSimbolosId; aux<7; aux++){
  1069  0747  0837               	movf	main@countSimbolosId,w
  1070  0748  00A0               	movwf	??_main
  1071  0749  0820               	movf	??_main,w
  1072  074A  00BB               	movwf	main@aux
  1073  074B  3007               	movlw	7
  1074  074C  023B               	subwf	main@aux,w
  1075  074D  1C03               	skipc
  1076  074E  2F50               	goto	u961
  1077  074F  2F51               	goto	u960
  1078  0750                     u961:
  1079  0750  2F52               	goto	l1462
  1080  0751                     u960:
  1081  0751  2F61               	goto	l1468
  1082  0752                     l1462:
  1083                           
  1084                           ;main.c: 104:                     simbolosPin[aux] = 0x00;
  1085  0752  083B               	movf	main@aux,w
  1086  0753  3E29               	addlw	(low (main@simbolosPin| 0))& (0+255)
  1087  0754  0084               	movwf	4
  1088  0755  1383               	bcf	3,7	;select IRP bank0
  1089  0756  0180               	clrf	0
  1090  0757                     l1464:
  1091                           
  1092                           ;main.c: 105:                 }
  1093  0757  3001               	movlw	1
  1094  0758  00A0               	movwf	??_main
  1095  0759  0820               	movf	??_main,w
  1096  075A  07BB               	addwf	main@aux,f
  1097  075B                     l1466:
  1098  075B  3007               	movlw	7
  1099  075C  023B               	subwf	main@aux,w
  1100  075D  1C03               	skipc
  1101  075E  2F60               	goto	u971
  1102  075F  2F61               	goto	u970
  1103  0760                     u971:
  1104  0760  2F52               	goto	l1462
  1105  0761                     u970:
  1106  0761                     l1468:
  1107                           
  1108                           ;main.c: 108:                 unsigned char i = 0;
  1109  0761  01B2               	clrf	main@i_149
  1110  0762                     l1470:
  1111                           
  1112                           ;main.c: 109:                 unsigned char j;;main.c: 110:                 for(j=1; j<=
      +                          countRecordedAccesses; j++){
  1113  0762  01B5               	clrf	main@j_150
  1114  0763  0AB5               	incf	main@j_150,f
  1115  0764  2FB0               	goto	l1492
  1116  0765                     l1472:
  1117                           
  1118                           ;main.c: 111:                     i = 0;
  1119  0765  01B2               	clrf	main@i_149
  1120                           
  1121                           ;main.c: 112:                     unsigned char k = 0;
  1122  0766  01BA               	clrf	main@k
  1123                           
  1124                           ;main.c: 113:                     for(k=0; k<8; k++) {
  1125  0767  01BA               	clrf	main@k
  1126  0768                     l1478:
  1127                           
  1128                           ;main.c: 114:                         if(eeprom_read(j*16 + k) != simbolosId[k] ||
  1129  0768  083A               	movf	main@k,w
  1130  0769  3E22               	addlw	(low (main@simbolosId| 0))& (0+255)
  1131  076A  0084               	movwf	4
  1132  076B  0835               	movf	main@j_150,w
  1133  076C  00A0               	movwf	??_main
  1134  076D  3004               	movlw	4
  1135  076E                     u985:
  1136  076E  1003               	clrc
  1137  076F  0DA0               	rlf	??_main,f
  1138  0770  3EFF               	addlw	-1
  1139  0771  1D03               	skipz
  1140  0772  2F6E               	goto	u985
  1141  0773  083A               	movf	main@k,w
  1142  0774  0720               	addwf	??_main,w
  1143  0775  249F               	fcall	_eeprom_read
  1144  0776  1383               	bcf	3,7	;select IRP bank0
  1145  0777  0600               	xorwf	0,w
  1146  0778  1D03               	skipz
  1147  0779  2F7B               	goto	u991
  1148  077A  2F7C               	goto	u990
  1149  077B                     u991:
  1150  077B  2F93               	goto	l130
  1151  077C                     u990:
  1152  077C                     l1480:
  1153  077C  1283               	bcf	3,5	;RP0=0, select bank0
  1154  077D  1303               	bcf	3,6	;RP1=0, select bank0
  1155  077E  083A               	movf	main@k,w
  1156  077F  3E29               	addlw	(low (main@simbolosPin| 0))& (0+255)
  1157  0780  0084               	movwf	4
  1158  0781  0835               	movf	main@j_150,w
  1159  0782  00A0               	movwf	??_main
  1160  0783  3004               	movlw	4
  1161  0784                     u1005:
  1162  0784  1003               	clrc
  1163  0785  0DA0               	rlf	??_main,f
  1164  0786  3EFF               	addlw	-1
  1165  0787  1D03               	skipz
  1166  0788  2F84               	goto	u1005
  1167  0789  083A               	movf	main@k,w
  1168  078A  0720               	addwf	??_main,w
  1169  078B  3E08               	addlw	8
  1170  078C  249F               	fcall	_eeprom_read
  1171  078D  1383               	bcf	3,7	;select IRP bank0
  1172  078E  0600               	xorwf	0,w
  1173  078F  1903               	skipnz
  1174  0790  2F92               	goto	u1011
  1175  0791  2F93               	goto	u1010
  1176  0792                     u1011:
  1177  0792  2F98               	goto	l1482
  1178  0793                     u1010:
  1179  0793                     l130:
  1180                           
  1181                           ;main.c: 115:                                 eeprom_read(8 + (j*16 + k)) != simbolosPin
      +                          [k]) {;main.c: 116:                             i = 1;
  1182  0793  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0794  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0795  01B2               	clrf	main@i_149
  1185  0796  0AB2               	incf	main@i_149,f
  1186                           
  1187                           ;main.c: 117:                             break;
  1188  0797  2FA4               	goto	l1486
  1189  0798                     l1482:
  1190                           
  1191                           ;main.c: 119:                     }
  1192  0798  3001               	movlw	1
  1193  0799  1283               	bcf	3,5	;RP0=0, select bank0
  1194  079A  1303               	bcf	3,6	;RP1=0, select bank0
  1195  079B  00A0               	movwf	??_main
  1196  079C  0820               	movf	??_main,w
  1197  079D  07BA               	addwf	main@k,f
  1198  079E                     l1484:
  1199  079E  3008               	movlw	8
  1200  079F  023A               	subwf	main@k,w
  1201  07A0  1C03               	skipc
  1202  07A1  2FA3               	goto	u1021
  1203  07A2  2FA4               	goto	u1020
  1204  07A3                     u1021:
  1205  07A3  2F68               	goto	l1478
  1206  07A4                     u1020:
  1207  07A4                     l1486:
  1208                           
  1209                           ;main.c: 120:                     if(!i){
  1210  07A4  0832               	movf	main@i_149,w
  1211  07A5  1D03               	btfss	3,2
  1212  07A6  2FA8               	goto	u1031
  1213  07A7  2FA9               	goto	u1030
  1214  07A8                     u1031:
  1215  07A8  2FAA               	goto	l1490
  1216  07A9                     u1030:
  1217  07A9                     l1488:
  1218                           
  1219                           ;main.c: 122:                         exibirMensagemAcessoPermitido();
  1220  07A9  247F               	fcall	_exibirMensagemAcessoPermitido
  1221  07AA                     l1490:
  1222                           
  1223                           ;main.c: 124:                 }
  1224  07AA  3001               	movlw	1
  1225  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  1226  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  1227  07AD  00A0               	movwf	??_main
  1228  07AE  0820               	movf	??_main,w
  1229  07AF  07B5               	addwf	main@j_150,f
  1230  07B0                     l1492:
  1231  07B0  0835               	movf	main@j_150,w
  1232  07B1  0230               	subwf	main@countRecordedAccesses,w
  1233  07B2  1803               	skipnc
  1234  07B3  2FB5               	goto	u1041
  1235  07B4  2FB6               	goto	u1040
  1236  07B5                     u1041:
  1237  07B5  2F65               	goto	l1472
  1238  07B6                     u1040:
  1239  07B6                     l1494:
  1240                           
  1241                           ;main.c: 125:                 if(i) {
  1242  07B6  0832               	movf	main@i_149,w
  1243  07B7  1903               	btfsc	3,2
  1244  07B8  2FBA               	goto	u1051
  1245  07B9  2FBB               	goto	u1050
  1246  07BA                     u1051:
  1247  07BA  2FBC               	goto	l1498
  1248  07BB                     u1050:
  1249  07BB                     l1496:
  1250                           
  1251                           ;main.c: 127:                     exibirMensagemAcessoNegado();
  1252  07BB  2476               	fcall	_exibirMensagemAcessoNegado
  1253  07BC                     l1498:
  1254  07BC                     l1500:
  1255                           
  1256                           ;main.c: 134:         if (tecla >=0 && tecla <=9) {
  1257  07BC  300A               	movlw	10
  1258  07BD  1283               	bcf	3,5	;RP0=0, select bank0
  1259  07BE  1303               	bcf	3,6	;RP1=0, select bank0
  1260  07BF  0239               	subwf	main@tecla,w
  1261  07C0  1803               	skipnc
  1262  07C1  2FC3               	goto	u1061
  1263  07C2  2FC4               	goto	u1060
  1264  07C3                     u1061:
  1265  07C3  2EF1               	goto	l1428
  1266  07C4                     u1060:
  1267  07C4                     l1502:
  1268                           
  1269                           ;main.c: 136:             if(infoDigitada == 1){
  1270  07C4  0338               	decf	main@infoDigitada,w
  1271  07C5  1D03               	btfss	3,2
  1272  07C6  2FC8               	goto	u1071
  1273  07C7  2FC9               	goto	u1070
  1274  07C8                     u1071:
  1275  07C8  2FE0               	goto	l1512
  1276  07C9                     u1070:
  1277  07C9                     l1504:
  1278                           
  1279                           ;main.c: 137:                 if(countSimbolosId != 7) {
  1280  07C9  3007               	movlw	7
  1281  07CA  0637               	xorwf	main@countSimbolosId,w
  1282  07CB  1903               	btfsc	3,2
  1283  07CC  2FCE               	goto	u1081
  1284  07CD  2FCF               	goto	u1080
  1285  07CE                     u1081:
  1286  07CE  2EF1               	goto	l1428
  1287  07CF                     u1080:
  1288  07CF                     l1506:
  1289                           
  1290                           ;main.c: 138:                     simbolosId[countSimbolosId] = tecla;
  1291  07CF  0839               	movf	main@tecla,w
  1292  07D0  00A0               	movwf	??_main
  1293  07D1  0837               	movf	main@countSimbolosId,w
  1294  07D2  3E22               	addlw	(low (main@simbolosId| 0))& (0+255)
  1295  07D3  0084               	movwf	4
  1296  07D4  0820               	movf	??_main,w
  1297  07D5  1383               	bcf	3,7	;select IRP bank0
  1298  07D6  0080               	movwf	0
  1299  07D7                     l1508:
  1300                           
  1301                           ;main.c: 139:                     lcd_dat(0x2A);
  1302  07D7  302A               	movlw	42
  1303  07D8  251B               	fcall	_lcd_dat
  1304  07D9                     l1510:
  1305                           
  1306                           ;main.c: 140:                     countSimbolosId++;
  1307  07D9  3001               	movlw	1
  1308  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1309  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1310  07DC  00A0               	movwf	??_main
  1311  07DD  0820               	movf	??_main,w
  1312  07DE  07B7               	addwf	main@countSimbolosId,f
  1313  07DF  2EF1               	goto	l1428
  1314  07E0                     l1512:
  1315  07E0  3002               	movlw	2
  1316  07E1  0638               	xorwf	main@infoDigitada,w
  1317  07E2  1D03               	btfss	3,2
  1318  07E3  2FE5               	goto	u1091
  1319  07E4  2FE6               	goto	u1090
  1320  07E5                     u1091:
  1321  07E5  2EF1               	goto	l112
  1322  07E6                     u1090:
  1323  07E6                     l1514:
  1324                           
  1325                           ;main.c: 144:                 if(countSimbolosPin != 7) {
  1326  07E6  3007               	movlw	7
  1327  07E7  0631               	xorwf	main@countSimbolosPin,w
  1328  07E8  1903               	btfsc	3,2
  1329  07E9  2FEB               	goto	u1101
  1330  07EA  2FEC               	goto	u1100
  1331  07EB                     u1101:
  1332  07EB  2EF1               	goto	l112
  1333  07EC                     u1100:
  1334  07EC                     l1516:
  1335                           
  1336                           ;main.c: 145:                     simbolosPin[countSimbolosPin] = tecla;
  1337  07EC  0839               	movf	main@tecla,w
  1338  07ED  00A0               	movwf	??_main
  1339  07EE  0831               	movf	main@countSimbolosPin,w
  1340  07EF  3E29               	addlw	(low (main@simbolosPin| 0))& (0+255)
  1341  07F0  0084               	movwf	4
  1342  07F1  0820               	movf	??_main,w
  1343  07F2  1383               	bcf	3,7	;select IRP bank0
  1344  07F3  0080               	movwf	0
  1345  07F4                     l1518:
  1346                           
  1347                           ;main.c: 146:                     lcd_dat(0x2A);
  1348  07F4  302A               	movlw	42
  1349  07F5  251B               	fcall	_lcd_dat
  1350  07F6                     l1520:
  1351                           
  1352                           ;main.c: 147:                     countSimbolosPin++;
  1353  07F6  3001               	movlw	1
  1354  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  1355  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  1356  07F9  00A0               	movwf	??_main
  1357  07FA  0820               	movf	??_main,w
  1358  07FB  07B1               	addwf	main@countSimbolosPin,f
  1359  07FC  2EF1               	goto	l1428
  1360  07FD  2800               	ljmp	start
  1361  07FE                     __end_of_main:
  1362                           
  1363                           	psect	text1
  1364  05BD                     __ptext1:	
  1365 ;; *************** function _tc_tecla *****************
  1366 ;; Defined at:
  1367 ;;		line 26 in file "teclado.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  timeout         2    4[COMMON] unsigned int 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  to              2    8[COMMON] unsigned int 
  1372 ;;  i               1   12[COMMON] unsigned char 
  1373 ;;  ret             1   11[COMMON] unsigned char 
  1374 ;;  tmp             1   10[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      unsigned char 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1384 ;;      Params:         2       0       0       0
  1385 ;;      Locals:         5       0       0       0
  1386 ;;      Temps:          2       0       0       0
  1387 ;;      Totals:         9       0       0       0
  1388 ;;Total ram usage:        9 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 1
  1391 ;; This function calls:
  1392 ;;		___bmul
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _tc_tecla
  1400  05BD                     _tc_tecla:
  1401  05BD                     l1258:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _tc_tecla: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1404                           
  1405                           
  1406                           ;teclado.c: 27:     unsigned int to = 0;
  1407  05BD  01F8               	clrf	tc_tecla@to
  1408  05BE  01F9               	clrf	tc_tecla@to+1
  1409  05BF                     l1260:
  1410                           
  1411                           ;teclado.c: 28:     unsigned char i;;teclado.c: 29:     unsigned char ret = 10;
  1412  05BF  300A               	movlw	10
  1413  05C0  00F6               	movwf	??_tc_tecla
  1414  05C1  0876               	movf	??_tc_tecla,w
  1415  05C2  00FB               	movwf	tc_tecla@ret
  1416  05C3                     l1262:
  1417                           
  1418                           ;teclado.c: 30:     unsigned char tmp = PORTA;
  1419  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1420  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1421  05C5  0805               	movf	5,w	;volatile
  1422  05C6  00F6               	movwf	??_tc_tecla
  1423  05C7  0876               	movf	??_tc_tecla,w
  1424  05C8  00FA               	movwf	tc_tecla@tmp
  1425                           
  1426                           ;teclado.c: 32:     while (((to < timeout) || (!timeout))&& (ret == 10)) {
  1427  05C9  2E80               	goto	l43
  1428  05CA                     l1264:
  1429                           
  1430                           ;teclado.c: 33:         for (i = 0; i < 4; i++) {
  1431  05CA  01FC               	clrf	tc_tecla@i
  1432  05CB                     l1270:
  1433                           
  1434                           ;teclado.c: 34:             PORTA |= linha[i];
  1435  05CB  087C               	movf	tc_tecla@i,w
  1436  05CC  3E01               	addlw	low ((_linha-__stringbase)| (0+32768))
  1437  05CD  0084               	movwf	4
  1438  05CE  2001               	fcall	stringdir
  1439  05CF  00F6               	movwf	??_tc_tecla
  1440  05D0  0876               	movf	??_tc_tecla,w
  1441  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1442  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1443  05D3  0485               	iorwf	5,f	;volatile
  1444  05D4                     l1272:
  1445                           
  1446                           ;teclado.c: 36:             if (RB7) {
  1447  05D4  1F86               	btfss	6,7	;volatile
  1448  05D5  2DD7               	goto	u631
  1449  05D6  2DD8               	goto	u630
  1450  05D7                     u631:
  1451  05D7  2E04               	goto	l47
  1452  05D8                     u630:
  1453  05D8                     l1274:
  1454                           
  1455                           ;teclado.c: 37:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  1456  05D8  301A               	movlw	26
  1457  05D9  00F7               	movwf	??_tc_tecla+1
  1458  05DA  30F8               	movlw	248
  1459  05DB  00F6               	movwf	??_tc_tecla
  1460  05DC                     u1117:
  1461  05DC  0BF6               	decfsz	??_tc_tecla,f
  1462  05DD  2DDC               	goto	u1117
  1463  05DE  0BF7               	decfsz	??_tc_tecla+1,f
  1464  05DF  2DDC               	goto	u1117
  1465  05E0  0000               	nop
  1466  05E1                     l1276:
  1467                           
  1468                           ;teclado.c: 38:                 if (RB7) {
  1469  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  1470  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  1471  05E3  1F86               	btfss	6,7	;volatile
  1472  05E4  2DE6               	goto	u641
  1473  05E5  2DE7               	goto	u640
  1474  05E6                     u641:
  1475  05E6  2E04               	goto	l47
  1476  05E7                     u640:
  1477  05E7  2DFD               	goto	l1286
  1478  05E8                     l1280:
  1479                           
  1480                           ;teclado.c: 40:                         if (i == 3) {
  1481  05E8  3003               	movlw	3
  1482  05E9  067C               	xorwf	tc_tecla@i,w
  1483  05EA  1D03               	btfss	3,2
  1484  05EB  2DED               	goto	u651
  1485  05EC  2DEE               	goto	u650
  1486  05ED                     u651:
  1487  05ED  2DF3               	goto	l1284
  1488  05EE                     u650:
  1489  05EE                     l1282:
  1490                           
  1491                           ;teclado.c: 41:                             ret = 42;
  1492  05EE  302A               	movlw	42
  1493  05EF  00F6               	movwf	??_tc_tecla
  1494  05F0  0876               	movf	??_tc_tecla,w
  1495  05F1  00FB               	movwf	tc_tecla@ret
  1496                           
  1497                           ;teclado.c: 42:                         } else {
  1498  05F2  2DFD               	goto	l1286
  1499  05F3                     l1284:
  1500                           
  1501                           ;teclado.c: 43:                             ret = 1 + (i * 3);
  1502  05F3  3003               	movlw	3
  1503  05F4  00F6               	movwf	??_tc_tecla
  1504  05F5  0876               	movf	??_tc_tecla,w
  1505  05F6  00F0               	movwf	___bmul@multiplicand
  1506  05F7  087C               	movf	tc_tecla@i,w
  1507  05F8  24B0               	fcall	___bmul
  1508  05F9  3E01               	addlw	1
  1509  05FA  00F7               	movwf	??_tc_tecla+1
  1510  05FB  0877               	movf	??_tc_tecla+1,w
  1511  05FC  00FB               	movwf	tc_tecla@ret
  1512  05FD                     l1286:
  1513                           
  1514                           ;teclado.c: 39:                     while (RB7){
  1515  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  1516  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  1517  05FF  1B86               	btfsc	6,7	;volatile
  1518  0600  2E02               	goto	u661
  1519  0601  2E03               	goto	u660
  1520  0602                     u661:
  1521  0602  2DE8               	goto	l1280
  1522  0603                     u660:
  1523  0603  2E71               	goto	l1320
  1524  0604                     l47:	
  1525                           ;teclado.c: 48:             }
  1526                           
  1527                           
  1528                           ;teclado.c: 50:             if (RB6) {
  1529  0604  1F06               	btfss	6,6	;volatile
  1530  0605  2E07               	goto	u671
  1531  0606  2E08               	goto	u670
  1532  0607                     u671:
  1533  0607  2E2F               	goto	l54
  1534  0608                     u670:
  1535  0608                     l1288:
  1536                           
  1537                           ;teclado.c: 51:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  1538  0608  301A               	movlw	26
  1539  0609  00F7               	movwf	??_tc_tecla+1
  1540  060A  30F8               	movlw	248
  1541  060B  00F6               	movwf	??_tc_tecla
  1542  060C                     u1127:
  1543  060C  0BF6               	decfsz	??_tc_tecla,f
  1544  060D  2E0C               	goto	u1127
  1545  060E  0BF7               	decfsz	??_tc_tecla+1,f
  1546  060F  2E0C               	goto	u1127
  1547  0610  0000               	nop
  1548  0611                     l1290:
  1549                           
  1550                           ;teclado.c: 52:                 if (RB6) {
  1551  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0613  1F06               	btfss	6,6	;volatile
  1554  0614  2E16               	goto	u681
  1555  0615  2E17               	goto	u680
  1556  0616                     u681:
  1557  0616  2E2F               	goto	l54
  1558  0617                     u680:
  1559  0617  2E28               	goto	l1298
  1560  0618                     l1294:
  1561                           
  1562                           ;teclado.c: 54:                         if (i != 3){
  1563  0618  3003               	movlw	3
  1564  0619  067C               	xorwf	tc_tecla@i,w
  1565  061A  1903               	btfsc	3,2
  1566  061B  2E1D               	goto	u691
  1567  061C  2E1E               	goto	u690
  1568  061D                     u691:
  1569  061D  2E28               	goto	l1298
  1570  061E                     u690:
  1571  061E                     l1296:
  1572                           
  1573                           ;teclado.c: 55:                             ret = 2 + (i * 3);
  1574  061E  3003               	movlw	3
  1575  061F  00F6               	movwf	??_tc_tecla
  1576  0620  0876               	movf	??_tc_tecla,w
  1577  0621  00F0               	movwf	___bmul@multiplicand
  1578  0622  087C               	movf	tc_tecla@i,w
  1579  0623  24B0               	fcall	___bmul
  1580  0624  3E02               	addlw	2
  1581  0625  00F7               	movwf	??_tc_tecla+1
  1582  0626  0877               	movf	??_tc_tecla+1,w
  1583  0627  00FB               	movwf	tc_tecla@ret
  1584  0628                     l1298:
  1585                           
  1586                           ;teclado.c: 53:                     while (RB6) {
  1587  0628  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0629  1303               	bcf	3,6	;RP1=0, select bank0
  1589  062A  1B06               	btfsc	6,6	;volatile
  1590  062B  2E2D               	goto	u701
  1591  062C  2E2E               	goto	u700
  1592  062D                     u701:
  1593  062D  2E18               	goto	l1294
  1594  062E                     u700:
  1595  062E  2E71               	goto	l1320
  1596  062F                     l54:	
  1597                           ;teclado.c: 61:             }
  1598                           
  1599                           
  1600                           ;teclado.c: 63:             if (RB5) {
  1601  062F  1E86               	btfss	6,5	;volatile
  1602  0630  2E32               	goto	u711
  1603  0631  2E33               	goto	u710
  1604  0632                     u711:
  1605  0632  2E5F               	goto	l1314
  1606  0633                     u710:
  1607  0633                     l1300:
  1608                           
  1609                           ;teclado.c: 64:                 _delay((unsigned long)((20)*(4000000/4000.0)));
  1610  0633  301A               	movlw	26
  1611  0634  00F7               	movwf	??_tc_tecla+1
  1612  0635  30F8               	movlw	248
  1613  0636  00F6               	movwf	??_tc_tecla
  1614  0637                     u1137:
  1615  0637  0BF6               	decfsz	??_tc_tecla,f
  1616  0638  2E37               	goto	u1137
  1617  0639  0BF7               	decfsz	??_tc_tecla+1,f
  1618  063A  2E37               	goto	u1137
  1619  063B  0000               	nop
  1620  063C                     l1302:
  1621                           
  1622                           ;teclado.c: 65:                 if (RB5) {
  1623  063C  1283               	bcf	3,5	;RP0=0, select bank0
  1624  063D  1303               	bcf	3,6	;RP1=0, select bank0
  1625  063E  1E86               	btfss	6,5	;volatile
  1626  063F  2E41               	goto	u721
  1627  0640  2E42               	goto	u720
  1628  0641                     u721:
  1629  0641  2E5F               	goto	l1314
  1630  0642                     u720:
  1631  0642  2E58               	goto	l1312
  1632  0643                     l1306:
  1633                           
  1634                           ;teclado.c: 67:                         if(i == 3){
  1635  0643  3003               	movlw	3
  1636  0644  067C               	xorwf	tc_tecla@i,w
  1637  0645  1D03               	btfss	3,2
  1638  0646  2E48               	goto	u731
  1639  0647  2E49               	goto	u730
  1640  0648                     u731:
  1641  0648  2E4E               	goto	l1310
  1642  0649                     u730:
  1643  0649                     l1308:
  1644                           
  1645                           ;teclado.c: 68:                             ret = 35;
  1646  0649  3023               	movlw	35
  1647  064A  00F6               	movwf	??_tc_tecla
  1648  064B  0876               	movf	??_tc_tecla,w
  1649  064C  00FB               	movwf	tc_tecla@ret
  1650                           
  1651                           ;teclado.c: 69:                         } else {
  1652  064D  2E58               	goto	l1312
  1653  064E                     l1310:
  1654                           
  1655                           ;teclado.c: 70:                             ret = 3 + (i * 3);
  1656  064E  3003               	movlw	3
  1657  064F  00F6               	movwf	??_tc_tecla
  1658  0650  0876               	movf	??_tc_tecla,w
  1659  0651  00F0               	movwf	___bmul@multiplicand
  1660  0652  087C               	movf	tc_tecla@i,w
  1661  0653  24B0               	fcall	___bmul
  1662  0654  3E03               	addlw	3
  1663  0655  00F7               	movwf	??_tc_tecla+1
  1664  0656  0877               	movf	??_tc_tecla+1,w
  1665  0657  00FB               	movwf	tc_tecla@ret
  1666  0658                     l1312:
  1667                           
  1668                           ;teclado.c: 66:                     while (RB5) {
  1669  0658  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0659  1303               	bcf	3,6	;RP1=0, select bank0
  1671  065A  1A86               	btfsc	6,5	;volatile
  1672  065B  2E5D               	goto	u741
  1673  065C  2E5E               	goto	u740
  1674  065D                     u741:
  1675  065D  2E43               	goto	l1306
  1676  065E                     u740:
  1677  065E  2E71               	goto	l1320
  1678  065F                     l1314:
  1679                           
  1680                           ;teclado.c: 78:             PORTA &= ~linha[i];
  1681  065F  087C               	movf	tc_tecla@i,w
  1682  0660  3E01               	addlw	low ((_linha-__stringbase)| (0+32768))
  1683  0661  0084               	movwf	4
  1684  0662  2001               	fcall	stringdir
  1685  0663  3AFF               	xorlw	255
  1686  0664  00F6               	movwf	??_tc_tecla
  1687  0665  0876               	movf	??_tc_tecla,w
  1688  0666  0585               	andwf	5,f	;volatile
  1689  0667                     l1316:
  1690                           
  1691                           ;teclado.c: 79:         }
  1692  0667  3001               	movlw	1
  1693  0668  00F6               	movwf	??_tc_tecla
  1694  0669  0876               	movf	??_tc_tecla,w
  1695  066A  07FC               	addwf	tc_tecla@i,f
  1696  066B                     l1318:
  1697  066B  3004               	movlw	4
  1698  066C  027C               	subwf	tc_tecla@i,w
  1699  066D  1C03               	skipc
  1700  066E  2E70               	goto	u751
  1701  066F  2E71               	goto	u750
  1702  0670                     u751:
  1703  0670  2DCB               	goto	l1270
  1704  0671                     u750:
  1705  0671                     l1320:
  1706                           
  1707                           ;teclado.c: 80:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1708  0671  301A               	movlw	26
  1709  0672  00F7               	movwf	??_tc_tecla+1
  1710  0673  30F8               	movlw	248
  1711  0674  00F6               	movwf	??_tc_tecla
  1712  0675                     u1147:
  1713  0675  0BF6               	decfsz	??_tc_tecla,f
  1714  0676  2E75               	goto	u1147
  1715  0677  0BF7               	decfsz	??_tc_tecla+1,f
  1716  0678  2E75               	goto	u1147
  1717  0679  0000               	nop
  1718                           
  1719                           ;teclado.c: 81:         to += 5;
  1720  067A  3005               	movlw	5
  1721  067B  07F8               	addwf	tc_tecla@to,f
  1722  067C  1803               	skipnc
  1723  067D  0AF9               	incf	tc_tecla@to+1,f
  1724  067E  3000               	movlw	0
  1725  067F  07F9               	addwf	tc_tecla@to+1,f
  1726  0680                     l43:	
  1727                           ;teclado.c: 82:     }
  1728                           
  1729                           
  1730                           ;teclado.c: 32:     while (((to < timeout) || (!timeout))&& (ret == 10)) {
  1731  0680  0875               	movf	tc_tecla@timeout+1,w
  1732  0681  0279               	subwf	tc_tecla@to+1,w
  1733  0682  1D03               	skipz
  1734  0683  2E86               	goto	u765
  1735  0684  0874               	movf	tc_tecla@timeout,w
  1736  0685  0278               	subwf	tc_tecla@to,w
  1737  0686                     u765:
  1738  0686  1C03               	skipc
  1739  0687  2E89               	goto	u761
  1740  0688  2E8A               	goto	u760
  1741  0689                     u761:
  1742  0689  2E90               	goto	l1324
  1743  068A                     u760:
  1744  068A                     l1322:
  1745  068A  0874               	movf	tc_tecla@timeout,w
  1746  068B  0475               	iorwf	tc_tecla@timeout+1,w
  1747  068C  1D03               	btfss	3,2
  1748  068D  2E8F               	goto	u771
  1749  068E  2E90               	goto	u770
  1750  068F                     u771:
  1751  068F  2E96               	goto	l1326
  1752  0690                     u770:
  1753  0690                     l1324:
  1754  0690  300A               	movlw	10
  1755  0691  067B               	xorwf	tc_tecla@ret,w
  1756  0692  1903               	btfsc	3,2
  1757  0693  2E95               	goto	u781
  1758  0694  2E96               	goto	u780
  1759  0695                     u781:
  1760  0695  2DCA               	goto	l1264
  1761  0696                     u780:
  1762  0696                     l1326:
  1763                           
  1764                           ;teclado.c: 85:     PORTA = tmp;
  1765  0696  087A               	movf	tc_tecla@tmp,w
  1766  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0699  0085               	movwf	5	;volatile
  1769                           
  1770                           ;teclado.c: 86:     return ret;
  1771  069A  087B               	movf	tc_tecla@ret,w
  1772  069B                     l72:
  1773  069B  0008               	return
  1774  069C                     __end_of_tc_tecla:
  1775                           
  1776                           	psect	text2
  1777  04B0                     __ptext2:	
  1778 ;; *************** function ___bmul *****************
  1779 ;; Defined at:
  1780 ;;		line 4 in file "D:\program files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  multiplier      1    wreg     unsigned char 
  1783 ;;  multiplicand    1    0[COMMON] unsigned char 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  multiplier      1    3[COMMON] unsigned char 
  1786 ;;  product         1    2[COMMON] unsigned char 
  1787 ;; Return value:  Size  Location     Type
  1788 ;;                  1    wreg      unsigned char 
  1789 ;; Registers used:
  1790 ;;		wreg, status,2, status,0
  1791 ;; Tracked objects:
  1792 ;;		On entry : 0/0
  1793 ;;		On exit  : 0/0
  1794 ;;		Unchanged: 0/0
  1795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1796 ;;      Params:         1       0       0       0
  1797 ;;      Locals:         2       0       0       0
  1798 ;;      Temps:          1       0       0       0
  1799 ;;      Totals:         4       0       0       0
  1800 ;;Total ram usage:        4 bytes
  1801 ;; Hardware stack levels used: 1
  1802 ;; This function calls:
  1803 ;;		Nothing
  1804 ;; This function is called by:
  1805 ;;		_tc_tecla
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           
  1810                           ;psect for function ___bmul
  1811  04B0                     ___bmul:
  1812                           
  1813                           ;incstack = 0
  1814                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1815                           ;___bmul@multiplier stored from wreg
  1816  04B0  00F3               	movwf	___bmul@multiplier
  1817  04B1                     l1220:
  1818  04B1  01F2               	clrf	___bmul@product
  1819  04B2                     l1222:
  1820  04B2  1C73               	btfss	___bmul@multiplier,0
  1821  04B3  2CB5               	goto	u611
  1822  04B4  2CB6               	goto	u610
  1823  04B5                     u611:
  1824  04B5  2CBA               	goto	l1226
  1825  04B6                     u610:
  1826  04B6                     l1224:
  1827  04B6  0870               	movf	___bmul@multiplicand,w
  1828  04B7  00F1               	movwf	??___bmul
  1829  04B8  0871               	movf	??___bmul,w
  1830  04B9  07F2               	addwf	___bmul@product,f
  1831  04BA                     l1226:
  1832  04BA  1003               	clrc
  1833  04BB  0DF0               	rlf	___bmul@multiplicand,f
  1834  04BC                     l1228:
  1835  04BC  1003               	clrc
  1836  04BD  0CF3               	rrf	___bmul@multiplier,f
  1837  04BE  0873               	movf	___bmul@multiplier,w
  1838  04BF  1D03               	btfss	3,2
  1839  04C0  2CC2               	goto	u621
  1840  04C1  2CC3               	goto	u620
  1841  04C2                     u621:
  1842  04C2  2CB2               	goto	l1222
  1843  04C3                     u620:
  1844  04C3                     l1230:
  1845  04C3  0872               	movf	___bmul@product,w
  1846  04C4                     l318:
  1847  04C4  0008               	return
  1848  04C5                     __end_of___bmul:
  1849                           
  1850                           	psect	text3
  1851  058D                     __ptext3:	
  1852 ;; *************** function _lcd_init *****************
  1853 ;; Defined at:
  1854 ;;		line 60 in file "lcd.c"
  1855 ;; Parameters:    Size  Location     Type
  1856 ;;		None
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;		None
  1859 ;; Return value:  Size  Location     Type
  1860 ;;                  1    wreg      void 
  1861 ;; Registers used:
  1862 ;;		wreg, status,2, status,0, pclath, cstack
  1863 ;; Tracked objects:
  1864 ;;		On entry : 0/0
  1865 ;;		On exit  : 0/0
  1866 ;;		Unchanged: 0/0
  1867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1868 ;;      Params:         0       0       0       0
  1869 ;;      Locals:         0       0       0       0
  1870 ;;      Temps:          2       0       0       0
  1871 ;;      Totals:         2       0       0       0
  1872 ;;Total ram usage:        2 bytes
  1873 ;; Hardware stack levels used: 1
  1874 ;; Hardware stack levels required when called: 2
  1875 ;; This function calls:
  1876 ;;		_lcd_cmd
  1877 ;; This function is called by:
  1878 ;;		_main
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           
  1883                           ;psect for function _lcd_init
  1884  058D                     _lcd_init:
  1885  058D                     l1234:	
  1886                           ;incstack = 0
  1887                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1888                           
  1889                           
  1890                           ;lcd.c: 62:  RA0=0;
  1891  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1892  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1893  058F  1005               	bcf	5,0	;volatile
  1894                           
  1895                           ;lcd.c: 63:  RB3=0;
  1896  0590  1186               	bcf	6,3	;volatile
  1897  0591                     l1236:
  1898                           
  1899                           ;lcd.c: 64:  _delay((unsigned long)((20)*(4000000/4000.0)));
  1900  0591  301A               	movlw	26
  1901  0592  00F7               	movwf	??_lcd_init+1
  1902  0593  30F8               	movlw	248
  1903  0594  00F6               	movwf	??_lcd_init
  1904  0595                     u1157:
  1905  0595  0BF6               	decfsz	??_lcd_init,f
  1906  0596  2D95               	goto	u1157
  1907  0597  0BF7               	decfsz	??_lcd_init+1,f
  1908  0598  2D95               	goto	u1157
  1909  0599  0000               	nop
  1910  059A                     l1238:
  1911                           
  1912                           ;lcd.c: 65:  RA0=1;
  1913  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1914  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1915  059C  1405               	bsf	5,0	;volatile
  1916  059D                     l1240:
  1917                           
  1918                           ;lcd.c: 67:  lcd_cmd(0x30);
  1919  059D  3030               	movlw	48
  1920  059E  24F9               	fcall	_lcd_cmd
  1921  059F                     l1242:
  1922                           
  1923                           ;lcd.c: 68:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1924  059F  3007               	movlw	7
  1925  05A0  00F7               	movwf	??_lcd_init+1
  1926  05A1  307D               	movlw	125
  1927  05A2  00F6               	movwf	??_lcd_init
  1928  05A3                     u1167:
  1929  05A3  0BF6               	decfsz	??_lcd_init,f
  1930  05A4  2DA3               	goto	u1167
  1931  05A5  0BF7               	decfsz	??_lcd_init+1,f
  1932  05A6  2DA3               	goto	u1167
  1933                           
  1934                           ;lcd.c: 69:  lcd_cmd(0x30);
  1935  05A7  3030               	movlw	48
  1936  05A8  24F9               	fcall	_lcd_cmd
  1937  05A9                     l1244:
  1938                           
  1939                           ;lcd.c: 70:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1940  05A9  30C7               	movlw	199
  1941  05AA  00F6               	movwf	??_lcd_init
  1942  05AB                     u1177:
  1943  05AB  2DAC               	nop2
  1944  05AC  0BF6               	decfsz	??_lcd_init,f
  1945  05AD  2DAB               	goto	u1177
  1946  05AE  2DAF               	nop2
  1947  05AF  2DB0               	nop2
  1948  05B0                     l1246:
  1949                           
  1950                           ;lcd.c: 71:  lcd_cmd(0x38);
  1951  05B0  3038               	movlw	56
  1952  05B1  24F9               	fcall	_lcd_cmd
  1953  05B2                     l1248:
  1954                           
  1955                           ;lcd.c: 72:  lcd_cmd(0x08);
  1956  05B2  3008               	movlw	8
  1957  05B3  24F9               	fcall	_lcd_cmd
  1958  05B4                     l1250:
  1959                           
  1960                           ;lcd.c: 73:  lcd_cmd(0x0F);
  1961  05B4  300F               	movlw	15
  1962  05B5  24F9               	fcall	_lcd_cmd
  1963  05B6                     l1252:
  1964                           
  1965                           ;lcd.c: 74:  lcd_cmd(0x01);
  1966  05B6  3001               	movlw	1
  1967  05B7  24F9               	fcall	_lcd_cmd
  1968  05B8                     l1254:
  1969                           
  1970                           ;lcd.c: 75:  lcd_cmd(0x38);
  1971  05B8  3038               	movlw	56
  1972  05B9  24F9               	fcall	_lcd_cmd
  1973  05BA                     l1256:
  1974                           
  1975                           ;lcd.c: 76:     lcd_cmd(0x80);
  1976  05BA  3080               	movlw	128
  1977  05BB  24F9               	fcall	_lcd_cmd
  1978  05BC                     l22:
  1979  05BC  0008               	return
  1980  05BD                     __end_of_lcd_init:
  1981                           
  1982                           	psect	text4
  1983  0488                     __ptext4:	
  1984 ;; *************** function _exibirMensagemDigitarPin *****************
  1985 ;; Defined at:
  1986 ;;		line 21 in file "func.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;		None
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;		None
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  1    wreg      void 
  1993 ;; Registers used:
  1994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2000 ;;      Params:         0       0       0       0
  2001 ;;      Locals:         0       0       0       0
  2002 ;;      Temps:          0       0       0       0
  2003 ;;      Totals:         0       0       0       0
  2004 ;;Total ram usage:        0 bytes
  2005 ;; Hardware stack levels used: 1
  2006 ;; Hardware stack levels required when called: 3
  2007 ;; This function calls:
  2008 ;;		_lcd_cmd
  2009 ;;		_lcd_str
  2010 ;; This function is called by:
  2011 ;;		_main
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _exibirMensagemDigitarPin
  2017  0488                     _exibirMensagemDigitarPin:
  2018  0488                     l1370:	
  2019                           ;incstack = 0
  2020                           ; Regs used in _exibirMensagemDigitarPin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2021                           
  2022                           
  2023                           ;func.c: 22:     lcd_cmd(0x01);
  2024  0488  3001               	movlw	1
  2025  0489  24F9               	fcall	_lcd_cmd
  2026                           
  2027                           ;func.c: 23:     lcd_cmd(0x80);
  2028  048A  3080               	movlw	128
  2029  048B  24F9               	fcall	_lcd_cmd
  2030  048C                     l1372:
  2031                           
  2032                           ;func.c: 24:     lcd_str("Digite o PIN e aperte *");
  2033  048C  3032               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2034  048D  24C5               	fcall	_lcd_str
  2035  048E                     l1374:
  2036                           
  2037                           ;func.c: 25:     lcd_cmd(0xC0);
  2038  048E  30C0               	movlw	192
  2039  048F  24F9               	fcall	_lcd_cmd
  2040  0490                     l155:
  2041  0490  0008               	return
  2042  0491                     __end_of_exibirMensagemDigitarPin:
  2043                           
  2044                           	psect	text5
  2045  047F                     __ptext5:	
  2046 ;; *************** function _exibirMensagemAcessoPermitido *****************
  2047 ;; Defined at:
  2048 ;;		line 28 in file "func.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;		None
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  1    wreg      void 
  2055 ;; Registers used:
  2056 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2062 ;;      Params:         0       0       0       0
  2063 ;;      Locals:         0       0       0       0
  2064 ;;      Temps:          0       0       0       0
  2065 ;;      Totals:         0       0       0       0
  2066 ;;Total ram usage:        0 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 3
  2069 ;; This function calls:
  2070 ;;		_lcd_cmd
  2071 ;;		_lcd_str
  2072 ;; This function is called by:
  2073 ;;		_main
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _exibirMensagemAcessoPermitido
  2079  047F                     _exibirMensagemAcessoPermitido:
  2080  047F                     l1376:	
  2081                           ;incstack = 0
  2082                           ; Regs used in _exibirMensagemAcessoPermitido: [wreg-fsr0h+status,2+status,0+pclath+csta
      +                          ck]
  2083                           
  2084                           
  2085                           ;func.c: 29:     lcd_cmd(0x01);
  2086  047F  3001               	movlw	1
  2087  0480  24F9               	fcall	_lcd_cmd
  2088                           
  2089                           ;func.c: 30:     lcd_cmd(0x80);
  2090  0481  3080               	movlw	128
  2091  0482  24F9               	fcall	_lcd_cmd
  2092                           
  2093                           ;func.c: 31:     lcd_cmd(0x01);
  2094  0483  3001               	movlw	1
  2095  0484  24F9               	fcall	_lcd_cmd
  2096  0485                     l1378:
  2097                           
  2098                           ;func.c: 32:     lcd_str("Acesso permitido!");
  2099  0485  3061               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2100  0486  24C5               	fcall	_lcd_str
  2101  0487                     l158:
  2102  0487  0008               	return
  2103  0488                     __end_of_exibirMensagemAcessoPermitido:
  2104                           
  2105                           	psect	text6
  2106  0476                     __ptext6:	
  2107 ;; *************** function _exibirMensagemAcessoNegado *****************
  2108 ;; Defined at:
  2109 ;;		line 35 in file "func.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;		None
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2123 ;;      Params:         0       0       0       0
  2124 ;;      Locals:         0       0       0       0
  2125 ;;      Temps:          0       0       0       0
  2126 ;;      Totals:         0       0       0       0
  2127 ;;Total ram usage:        0 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 3
  2130 ;; This function calls:
  2131 ;;		_lcd_cmd
  2132 ;;		_lcd_str
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _exibirMensagemAcessoNegado
  2140  0476                     _exibirMensagemAcessoNegado:
  2141  0476                     l1380:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _exibirMensagemAcessoNegado: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2144                           
  2145                           
  2146                           ;func.c: 36:     lcd_cmd(0x01);
  2147  0476  3001               	movlw	1
  2148  0477  24F9               	fcall	_lcd_cmd
  2149                           
  2150                           ;func.c: 37:     lcd_cmd(0x80);
  2151  0478  3080               	movlw	128
  2152  0479  24F9               	fcall	_lcd_cmd
  2153                           
  2154                           ;func.c: 38:     lcd_cmd(0x01);
  2155  047A  3001               	movlw	1
  2156  047B  24F9               	fcall	_lcd_cmd
  2157  047C                     l1382:
  2158                           
  2159                           ;func.c: 39:     lcd_str("Acesso Negado!");
  2160  047C  3073               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2161  047D  24C5               	fcall	_lcd_str
  2162  047E                     l161:
  2163  047E  0008               	return
  2164  047F                     __end_of_exibirMensagemAcessoNegado:
  2165                           
  2166                           	psect	text7
  2167  0564                     __ptext7:	
  2168 ;; *************** function _eeprom_write *****************
  2169 ;; Defined at:
  2170 ;;		line 6 in file "D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  addr            1    wreg     unsigned char 
  2173 ;;  value           1    0[COMMON] unsigned char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  addr            1    2[COMMON] unsigned char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2185 ;;      Params:         1       0       0       0
  2186 ;;      Locals:         1       0       0       0
  2187 ;;      Temps:          1       0       0       0
  2188 ;;      Totals:         3       0       0       0
  2189 ;;Total ram usage:        3 bytes
  2190 ;; Hardware stack levels used: 1
  2191 ;; This function calls:
  2192 ;;		Nothing
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           
  2199                           ;psect for function _eeprom_write
  2200  0564                     _eeprom_write:
  2201                           
  2202                           ;incstack = 0
  2203                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2204                           ;eeprom_write@addr stored from wreg
  2205  0564  00F2               	movwf	eeprom_write@addr
  2206  0565                     l281:	
  2207                           ;D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eewrite.c: 6: eeprom_write(u
      +                          nsigned char addr, unsigned char value);D:\program files\Microchip\xc8\v2.32\pic\sources
      +                          \c90\pic\__eewrite.c: 7: {;D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__ee
      +                          write.c: 8:  do{ while (EECON1bits.WR) { continue; } EEADR = (addr); EEDATA = (value); E
      +                          ECON1 &= 0x3F; STATUSbits.CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCO
      +                          Nbits.GIE = 0; EECON1bits.WREN = 1; EECON2 = 0x55; EECON2 = 0xAA; EECON1bits.WR = 1; EEC
      +                          ON1bits.WREN = 0; if (STATUSbits.CARRY) { INTCONbits.GIE = 1; } } while (0);
  2208                           
  2209  0565                     l282:
  2210  0565  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0566  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0567  189C               	btfsc	28,1	;volsfr
  2213  0568  2D6A               	goto	u801
  2214  0569  2D6B               	goto	u800
  2215  056A                     u801:
  2216  056A  2D65               	goto	l282
  2217  056B                     u800:
  2218  056B                     l1334:
  2219  056B  0872               	movf	eeprom_write@addr,w
  2220  056C  009B               	movwf	27	;volatile
  2221  056D  0870               	movf	eeprom_write@value,w
  2222  056E  009A               	movwf	26	;volatile
  2223  056F                     l1336:
  2224  056F  303F               	movlw	63
  2225  0570  00F1               	movwf	??_eeprom_write
  2226  0571  0871               	movf	??_eeprom_write,w
  2227  0572  059C               	andwf	28,f	;volsfr
  2228  0573                     l1338:
  2229  0573  1283               	bcf	3,5	;RP0=0, select bank0
  2230  0574  1303               	bcf	3,6	;RP1=0, select bank0
  2231  0575  1003               	bcf	3,0	;volatile
  2232  0576                     l1340:
  2233  0576  1F8B               	btfss	11,7	;volatile
  2234  0577  2D79               	goto	u811
  2235  0578  2D7A               	goto	u810
  2236  0579                     u811:
  2237  0579  2D7B               	goto	l285
  2238  057A                     u810:
  2239  057A                     l1342:
  2240  057A  1403               	bsf	3,0	;volatile
  2241  057B                     l285:
  2242  057B  138B               	bcf	11,7	;volatile
  2243  057C  1683               	bsf	3,5	;RP0=1, select bank1
  2244  057D  1303               	bcf	3,6	;RP1=0, select bank1
  2245  057E  151C               	bsf	28,2	;volsfr
  2246  057F                     l1344:
  2247  057F  3055               	movlw	85
  2248  0580  009D               	movwf	29	;volsfr
  2249  0581  30AA               	movlw	170
  2250  0582  009D               	movwf	29	;volsfr
  2251  0583                     l1346:
  2252  0583  149C               	bsf	28,1	;volsfr
  2253  0584                     l1348:
  2254  0584  111C               	bcf	28,2	;volsfr
  2255  0585                     l1350:
  2256  0585  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0586  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0587  1C03               	btfss	3,0	;volatile
  2259  0588  2D8A               	goto	u821
  2260  0589  2D8B               	goto	u820
  2261  058A                     u821:
  2262  058A  2D8C               	goto	l288
  2263  058B                     u820:
  2264  058B                     l1352:
  2265  058B  178B               	bsf	11,7	;volatile
  2266  058C                     l288:
  2267  058C  0008               	return
  2268  058D                     __end_of_eeprom_write:
  2269                           
  2270                           	psect	text8
  2271  049F                     __ptext8:	
  2272 ;; *************** function _eeprom_read *****************
  2273 ;; Defined at:
  2274 ;;		line 6 in file "D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  addr            1    wreg     unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  addr            1    1[COMMON] unsigned char 
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      unsigned char 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2288 ;;      Params:         0       0       0       0
  2289 ;;      Locals:         1       0       0       0
  2290 ;;      Temps:          1       0       0       0
  2291 ;;      Totals:         2       0       0       0
  2292 ;;Total ram usage:        2 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; This function calls:
  2295 ;;		Nothing
  2296 ;; This function is called by:
  2297 ;;		_main
  2298 ;; This function uses a non-reentrant model
  2299 ;;
  2300                           
  2301                           
  2302                           ;psect for function _eeprom_read
  2303  049F                     _eeprom_read:
  2304                           
  2305                           ;incstack = 0
  2306                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  2307                           ;eeprom_read@addr stored from wreg
  2308  049F  00F1               	movwf	eeprom_read@addr
  2309  04A0                     l262:	
  2310                           ;D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 6: eeprom_read(uns
      +                          igned char addr);D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 7:
      +                           {;D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 8:  do
  2311                           
  2312  04A0  0064               	clrwdt	;# 
  2313  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2314  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2315  04A3  189C               	btfsc	28,1	;volsfr
  2316  04A4  2CA6               	goto	u791
  2317  04A5  2CA7               	goto	u790
  2318  04A6                     u791:
  2319  04A6  2CA0               	goto	l262
  2320  04A7                     u790:
  2321  04A7                     l1330:
  2322                           
  2323                           ;D:\program files\Microchip\xc8\v2.32\pic\sources\c90\pic\__eeread.c: 18:  return ( EEAD
      +                          R = addr, EECON1 &= 0x3F, EECON1bits.RD = 1, EEDATA);
  2324  04A7  0871               	movf	eeprom_read@addr,w
  2325  04A8  009B               	movwf	27	;volatile
  2326  04A9  303F               	movlw	63
  2327  04AA  00F0               	movwf	??_eeprom_read
  2328  04AB  0870               	movf	??_eeprom_read,w
  2329  04AC  059C               	andwf	28,f	;volsfr
  2330  04AD  141C               	bsf	28,0	;volsfr
  2331  04AE  081A               	movf	26,w	;volatile
  2332  04AF                     l264:
  2333  04AF  0008               	return
  2334  04B0                     __end_of_eeprom_read:
  2335                           
  2336                           	psect	text9
  2337  04DB                     __ptext9:	
  2338 ;; *************** function _Questao2 *****************
  2339 ;; Defined at:
  2340 ;;		line 48 in file "func.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  tecla           1    wreg     unsigned char 
  2343 ;;  modoOperacao    1    9[COMMON] PTR unsigned char 
  2344 ;;		 -> main@modoOperacao(1), 
  2345 ;;  infoDigitada    1   10[COMMON] PTR unsigned char 
  2346 ;;		 -> main@infoDigitada(1), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  tecla           1   12[COMMON] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2358 ;;      Params:         2       0       0       0
  2359 ;;      Locals:         1       0       0       0
  2360 ;;      Temps:          1       0       0       0
  2361 ;;      Totals:         4       0       0       0
  2362 ;;Total ram usage:        4 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 4
  2365 ;; This function calls:
  2366 ;;		_exibirMensagemDigitarId
  2367 ;;		_lcd_cmd
  2368 ;; This function is called by:
  2369 ;;		_main
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           
  2374                           ;psect for function _Questao2
  2375  04DB                     _Questao2:
  2376                           
  2377                           ;incstack = 0
  2378                           ; Regs used in _Questao2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2379                           ;Questao2@tecla stored from wreg
  2380  04DB  00FC               	movwf	Questao2@tecla
  2381  04DC                     l1360:
  2382                           
  2383                           ;func.c: 49:     if (tecla == 42 && *modoOperacao != 2) {
  2384  04DC  302A               	movlw	42
  2385  04DD  067C               	xorwf	Questao2@tecla,w
  2386  04DE  1D03               	btfss	3,2
  2387  04DF  2CE1               	goto	u851
  2388  04E0  2CE2               	goto	u850
  2389  04E1                     u851:
  2390  04E1  2CF8               	goto	l169
  2391  04E2                     u850:
  2392  04E2                     l1362:
  2393  04E2  0879               	movf	Questao2@modoOperacao,w
  2394  04E3  0084               	movwf	4
  2395  04E4  3002               	movlw	2
  2396  04E5  1383               	bcf	3,7	;select IRP bank0
  2397  04E6  0600               	xorwf	0,w
  2398  04E7  1903               	btfsc	3,2
  2399  04E8  2CEA               	goto	u861
  2400  04E9  2CEB               	goto	u860
  2401  04EA                     u861:
  2402  04EA  2CF8               	goto	l169
  2403  04EB                     u860:
  2404  04EB                     l1364:
  2405                           
  2406                           ;func.c: 50:         *modoOperacao = 2;
  2407  04EB  3002               	movlw	2
  2408  04EC  00FB               	movwf	??_Questao2
  2409  04ED  0879               	movf	Questao2@modoOperacao,w
  2410  04EE  0084               	movwf	4
  2411  04EF  087B               	movf	??_Questao2,w
  2412  04F0  0080               	movwf	0
  2413                           
  2414                           ;func.c: 51:         *infoDigitada = 1;
  2415  04F1  087A               	movf	Questao2@infoDigitada,w
  2416  04F2  0084               	movwf	4
  2417  04F3  0180               	clrf	0
  2418  04F4  0A80               	incf	0,f
  2419  04F5                     l1366:
  2420                           
  2421                           ;func.c: 52:         exibirMensagemDigitarId();
  2422  04F5  246D               	fcall	_exibirMensagemDigitarId
  2423  04F6                     l1368:
  2424                           
  2425                           ;func.c: 53:         lcd_cmd(0xC0);
  2426  04F6  30C0               	movlw	192
  2427  04F7  24F9               	fcall	_lcd_cmd
  2428  04F8                     l169:
  2429  04F8  0008               	return
  2430  04F9                     __end_of_Questao2:
  2431                           
  2432                           	psect	text10
  2433  046D                     __ptext10:	
  2434 ;; *************** function _exibirMensagemDigitarId *****************
  2435 ;; Defined at:
  2436 ;;		line 12 in file "func.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2450 ;;      Params:         0       0       0       0
  2451 ;;      Locals:         0       0       0       0
  2452 ;;      Temps:          0       0       0       0
  2453 ;;      Totals:         0       0       0       0
  2454 ;;Total ram usage:        0 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 3
  2457 ;; This function calls:
  2458 ;;		_lcd_cmd
  2459 ;;		_lcd_str
  2460 ;; This function is called by:
  2461 ;;		_Questao2
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           
  2466                           ;psect for function _exibirMensagemDigitarId
  2467  046D                     _exibirMensagemDigitarId:
  2468  046D                     l1216:	
  2469                           ;incstack = 0
  2470                           ; Regs used in _exibirMensagemDigitarId: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2471                           
  2472                           
  2473                           ;func.c: 13:     lcd_cmd(0x01);
  2474  046D  3001               	movlw	1
  2475  046E  24F9               	fcall	_lcd_cmd
  2476                           
  2477                           ;func.c: 14:     lcd_cmd(0x80);
  2478  046F  3080               	movlw	128
  2479  0470  24F9               	fcall	_lcd_cmd
  2480                           
  2481                           ;func.c: 15:     lcd_cmd(0x01);
  2482  0471  3001               	movlw	1
  2483  0472  24F9               	fcall	_lcd_cmd
  2484  0473                     l1218:
  2485                           
  2486                           ;func.c: 17:     lcd_str("Digite o ID e aperte *");
  2487  0473  304A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2488  0474  24C5               	fcall	_lcd_str
  2489  0475                     l152:
  2490  0475  0008               	return
  2491  0476                     __end_of_exibirMensagemDigitarId:
  2492                           
  2493                           	psect	text11
  2494  0491                     __ptext11:	
  2495 ;; *************** function _Questao1 *****************
  2496 ;; Defined at:
  2497 ;;		line 42 in file "func.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  tecla           1    wreg     unsigned char 
  2500 ;;  modoOperacao    1    9[COMMON] unsigned char 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;  tecla           1   10[COMMON] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2512 ;;      Params:         1       0       0       0
  2513 ;;      Locals:         1       0       0       0
  2514 ;;      Temps:          0       0       0       0
  2515 ;;      Totals:         2       0       0       0
  2516 ;;Total ram usage:        2 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 4
  2519 ;; This function calls:
  2520 ;;		_exibirMensagemInicial
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           
  2527                           ;psect for function _Questao1
  2528  0491                     _Questao1:
  2529                           
  2530                           ;incstack = 0
  2531                           ; Regs used in _Questao1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2532                           ;Questao1@tecla stored from wreg
  2533  0491  00FA               	movwf	Questao1@tecla
  2534  0492                     l1354:
  2535                           
  2536                           ;func.c: 43:     if(tecla != 10 && modoOperacao == 0) {
  2537  0492  300A               	movlw	10
  2538  0493  067A               	xorwf	Questao1@tecla,w
  2539  0494  1903               	btfsc	3,2
  2540  0495  2C97               	goto	u831
  2541  0496  2C98               	goto	u830
  2542  0497                     u831:
  2543  0497  2C9E               	goto	l165
  2544  0498                     u830:
  2545  0498                     l1356:
  2546  0498  0879               	movf	Questao1@modoOperacao,w
  2547  0499  1D03               	btfss	3,2
  2548  049A  2C9C               	goto	u841
  2549  049B  2C9D               	goto	u840
  2550  049C                     u841:
  2551  049C  2C9E               	goto	l165
  2552  049D                     u840:
  2553  049D                     l1358:
  2554                           
  2555                           ;func.c: 44:         exibirMensagemInicial();
  2556  049D  2468               	fcall	_exibirMensagemInicial
  2557  049E                     l165:
  2558  049E  0008               	return
  2559  049F                     __end_of_Questao1:
  2560                           
  2561                           	psect	text12
  2562  0468                     __ptext12:	
  2563 ;; *************** function _exibirMensagemInicial *****************
  2564 ;; Defined at:
  2565 ;;		line 4 in file "func.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;		None
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;		None
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2579 ;;      Params:         0       0       0       0
  2580 ;;      Locals:         0       0       0       0
  2581 ;;      Temps:          0       0       0       0
  2582 ;;      Totals:         0       0       0       0
  2583 ;;Total ram usage:        0 bytes
  2584 ;; Hardware stack levels used: 1
  2585 ;; Hardware stack levels required when called: 3
  2586 ;; This function calls:
  2587 ;;		_lcd_cmd
  2588 ;;		_lcd_str
  2589 ;; This function is called by:
  2590 ;;		_Questao1
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _exibirMensagemInicial
  2596  0468                     _exibirMensagemInicial:
  2597  0468                     l1212:	
  2598                           ;incstack = 0
  2599                           ; Regs used in _exibirMensagemInicial: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2600                           
  2601                           
  2602                           ;func.c: 5:     lcd_cmd(0x80);
  2603  0468  3080               	movlw	128
  2604  0469  24F9               	fcall	_lcd_cmd
  2605  046A                     l1214:
  2606                           
  2607                           ;func.c: 8:     lcd_str("Pressione * para entrar ou # para Configurar");
  2608  046A  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2609  046B  24C5               	fcall	_lcd_str
  2610  046C                     l149:
  2611  046C  0008               	return
  2612  046D                     __end_of_exibirMensagemInicial:
  2613                           
  2614                           	psect	text13
  2615  04C5                     __ptext13:	
  2616 ;; *************** function _lcd_str *****************
  2617 ;; Defined at:
  2618 ;;		line 79 in file "lcd.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  str             1    wreg     PTR const unsigned char 
  2621 ;;		 -> STR_5(15), STR_4(18), STR_3(24), STR_2(23), 
  2622 ;;		 -> STR_1(45), 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  str             1    8[COMMON] PTR const unsigned char 
  2625 ;;		 -> STR_5(15), STR_4(18), STR_3(24), STR_2(23), 
  2626 ;;		 -> STR_1(45), 
  2627 ;;  i               1    7[COMMON] unsigned char 
  2628 ;; Return value:  Size  Location     Type
  2629 ;;                  1    wreg      void 
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2637 ;;      Params:         0       0       0       0
  2638 ;;      Locals:         2       0       0       0
  2639 ;;      Temps:          1       0       0       0
  2640 ;;      Totals:         3       0       0       0
  2641 ;;Total ram usage:        3 bytes
  2642 ;; Hardware stack levels used: 1
  2643 ;; Hardware stack levels required when called: 2
  2644 ;; This function calls:
  2645 ;;		_lcd_dat
  2646 ;; This function is called by:
  2647 ;;		_exibirMensagemInicial
  2648 ;;		_exibirMensagemDigitarId
  2649 ;;		_exibirMensagemDigitarPin
  2650 ;;		_exibirMensagemAcessoPermitido
  2651 ;;		_exibirMensagemAcessoNegado
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _lcd_str
  2657  04C5                     _lcd_str:
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2661                           ;lcd_str@str stored from wreg
  2662  04C5  00F8               	movwf	lcd_str@str
  2663  04C6                     l1204:
  2664                           
  2665                           ;lcd.c: 79: void lcd_str(const char* str);lcd.c: 80: {;lcd.c: 81:  unsigned char i=0;
  2666  04C6  01F7               	clrf	lcd_str@i
  2667                           
  2668                           ;lcd.c: 83:  while(str[i])
  2669  04C7  2CD1               	goto	l1210
  2670  04C8                     l1206:
  2671                           
  2672                           ;lcd.c: 84:  {;lcd.c: 85:    lcd_dat(str[i]);
  2673  04C8  0877               	movf	lcd_str@i,w
  2674  04C9  0778               	addwf	lcd_str@str,w
  2675  04CA  0084               	movwf	4
  2676  04CB  2001               	fcall	stringdir
  2677  04CC  251B               	fcall	_lcd_dat
  2678  04CD                     l1208:
  2679                           
  2680                           ;lcd.c: 86:    i++;
  2681  04CD  3001               	movlw	1
  2682  04CE  00F6               	movwf	??_lcd_str
  2683  04CF  0876               	movf	??_lcd_str,w
  2684  04D0  07F7               	addwf	lcd_str@i,f
  2685  04D1                     l1210:
  2686                           
  2687                           ;lcd.c: 83:  while(str[i])
  2688  04D1  0877               	movf	lcd_str@i,w
  2689  04D2  0778               	addwf	lcd_str@str,w
  2690  04D3  0084               	movwf	4
  2691  04D4  2001               	fcall	stringdir
  2692  04D5  3A00               	xorlw	0
  2693  04D6  1D03               	skipz
  2694  04D7  2CD9               	goto	u601
  2695  04D8  2CDA               	goto	u600
  2696  04D9                     u601:
  2697  04D9  2CC8               	goto	l1206
  2698  04DA                     u600:
  2699  04DA                     l28:
  2700  04DA  0008               	return
  2701  04DB                     __end_of_lcd_str:
  2702                           
  2703                           	psect	text14
  2704  051B                     __ptext14:	
  2705 ;; *************** function _lcd_dat *****************
  2706 ;; Defined at:
  2707 ;;		line 49 in file "lcd.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  val             1    wreg     unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  val             1    5[COMMON] unsigned char 
  2712 ;; Return value:  Size  Location     Type
  2713 ;;                  1    wreg      void 
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0, pclath, cstack
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2721 ;;      Params:         0       0       0       0
  2722 ;;      Locals:         1       0       0       0
  2723 ;;      Temps:          2       0       0       0
  2724 ;;      Totals:         3       0       0       0
  2725 ;;Total ram usage:        3 bytes
  2726 ;; Hardware stack levels used: 1
  2727 ;; Hardware stack levels required when called: 1
  2728 ;; This function calls:
  2729 ;;		_lcd_wr
  2730 ;; This function is called by:
  2731 ;;		_lcd_str
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _lcd_dat
  2738  051B                     _lcd_dat:
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  2742                           ;lcd_dat@val stored from wreg
  2743  051B  00F5               	movwf	lcd_dat@val
  2744  051C                     l1176:
  2745                           
  2746                           ;lcd.c: 49: void lcd_dat(unsigned char val);lcd.c: 50: {;lcd.c: 51:  RA0=1;
  2747  051C  1283               	bcf	3,5	;RP0=0, select bank0
  2748  051D  1303               	bcf	3,6	;RP1=0, select bank0
  2749  051E  1405               	bsf	5,0	;volatile
  2750  051F                     l1178:
  2751                           
  2752                           ;lcd.c: 52:         lcd_wr(val);
  2753  051F  0875               	movf	lcd_dat@val,w
  2754  0520  253D               	fcall	_lcd_wr
  2755  0521                     l1180:
  2756                           
  2757                           ;lcd.c: 53:         RB3=1;
  2758  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2759  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2760  0523  1586               	bsf	6,3	;volatile
  2761  0524                     l1182:
  2762                           
  2763                           ;lcd.c: 54:         _delay((unsigned long)((3)*(4000000/4000.0)));
  2764  0524  3004               	movlw	4
  2765  0525  00F4               	movwf	??_lcd_dat+1
  2766  0526  30E4               	movlw	228
  2767  0527  00F3               	movwf	??_lcd_dat
  2768  0528                     u1187:
  2769  0528  0BF3               	decfsz	??_lcd_dat,f
  2770  0529  2D28               	goto	u1187
  2771  052A  0BF4               	decfsz	??_lcd_dat+1,f
  2772  052B  2D28               	goto	u1187
  2773  052C  0000               	nop
  2774  052D                     l1184:
  2775                           
  2776                           ;lcd.c: 55:         RA0=0;
  2777  052D  1283               	bcf	3,5	;RP0=0, select bank0
  2778  052E  1303               	bcf	3,6	;RP1=0, select bank0
  2779  052F  1005               	bcf	5,0	;volatile
  2780  0530                     l1186:
  2781                           
  2782                           ;lcd.c: 56:         _delay((unsigned long)((3)*(4000000/4000.0)));
  2783  0530  3004               	movlw	4
  2784  0531  00F4               	movwf	??_lcd_dat+1
  2785  0532  30E4               	movlw	228
  2786  0533  00F3               	movwf	??_lcd_dat
  2787  0534                     u1197:
  2788  0534  0BF3               	decfsz	??_lcd_dat,f
  2789  0535  2D34               	goto	u1197
  2790  0536  0BF4               	decfsz	??_lcd_dat+1,f
  2791  0537  2D34               	goto	u1197
  2792  0538  0000               	nop
  2793  0539                     l1188:
  2794                           
  2795                           ;lcd.c: 57:  RA0=1;
  2796  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2797  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2798  053B  1405               	bsf	5,0	;volatile
  2799  053C                     l19:
  2800  053C  0008               	return
  2801  053D                     __end_of_lcd_dat:
  2802                           
  2803                           	psect	text15
  2804  04F9                     __ptext15:	
  2805 ;; *************** function _lcd_cmd *****************
  2806 ;; Defined at:
  2807 ;;		line 38 in file "lcd.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;  val             1    wreg     unsigned char 
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;  val             1    5[COMMON] unsigned char 
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, status,2, status,0, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2821 ;;      Params:         0       0       0       0
  2822 ;;      Locals:         1       0       0       0
  2823 ;;      Temps:          2       0       0       0
  2824 ;;      Totals:         3       0       0       0
  2825 ;;Total ram usage:        3 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 1
  2828 ;; This function calls:
  2829 ;;		_lcd_wr
  2830 ;; This function is called by:
  2831 ;;		_lcd_init
  2832 ;;		_main
  2833 ;;		_exibirMensagemInicial
  2834 ;;		_exibirMensagemDigitarId
  2835 ;;		_exibirMensagemDigitarPin
  2836 ;;		_exibirMensagemAcessoPermitido
  2837 ;;		_exibirMensagemAcessoNegado
  2838 ;;		_Questao2
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _lcd_cmd
  2844  04F9                     _lcd_cmd:
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  2848                           ;lcd_cmd@val stored from wreg
  2849  04F9  00F5               	movwf	lcd_cmd@val
  2850  04FA                     l1190:
  2851                           
  2852                           ;lcd.c: 38: void lcd_cmd(unsigned char val);lcd.c: 39: {;lcd.c: 40:  RA0=1;
  2853  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2854  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2855  04FC  1405               	bsf	5,0	;volatile
  2856  04FD                     l1192:
  2857                           
  2858                           ;lcd.c: 41:         lcd_wr(val);
  2859  04FD  0875               	movf	lcd_cmd@val,w
  2860  04FE  253D               	fcall	_lcd_wr
  2861  04FF                     l1194:
  2862                           
  2863                           ;lcd.c: 42:         RB3=0;
  2864  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2865  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2866  0501  1186               	bcf	6,3	;volatile
  2867  0502                     l1196:
  2868                           
  2869                           ;lcd.c: 43:         _delay((unsigned long)((3)*(4000000/4000.0)));
  2870  0502  3004               	movlw	4
  2871  0503  00F4               	movwf	??_lcd_cmd+1
  2872  0504  30E4               	movlw	228
  2873  0505  00F3               	movwf	??_lcd_cmd
  2874  0506                     u1207:
  2875  0506  0BF3               	decfsz	??_lcd_cmd,f
  2876  0507  2D06               	goto	u1207
  2877  0508  0BF4               	decfsz	??_lcd_cmd+1,f
  2878  0509  2D06               	goto	u1207
  2879  050A  0000               	nop
  2880  050B                     l1198:
  2881                           
  2882                           ;lcd.c: 44:         RA0=0;
  2883  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2884  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2885  050D  1005               	bcf	5,0	;volatile
  2886  050E                     l1200:
  2887                           
  2888                           ;lcd.c: 45:         _delay((unsigned long)((3)*(4000000/4000.0)));
  2889  050E  3004               	movlw	4
  2890  050F  00F4               	movwf	??_lcd_cmd+1
  2891  0510  30E4               	movlw	228
  2892  0511  00F3               	movwf	??_lcd_cmd
  2893  0512                     u1217:
  2894  0512  0BF3               	decfsz	??_lcd_cmd,f
  2895  0513  2D12               	goto	u1217
  2896  0514  0BF4               	decfsz	??_lcd_cmd+1,f
  2897  0515  2D12               	goto	u1217
  2898  0516  0000               	nop
  2899  0517                     l1202:
  2900                           
  2901                           ;lcd.c: 46:  RA0=1;
  2902  0517  1283               	bcf	3,5	;RP0=0, select bank0
  2903  0518  1303               	bcf	3,6	;RP1=0, select bank0
  2904  0519  1405               	bsf	5,0	;volatile
  2905  051A                     l16:
  2906  051A  0008               	return
  2907  051B                     __end_of_lcd_cmd:
  2908                           
  2909                           	psect	text16
  2910  053D                     __ptext16:	
  2911 ;; *************** function _lcd_wr *****************
  2912 ;; Defined at:
  2913 ;;		line 24 in file "lcd.c"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;  val             1    wreg     unsigned char 
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  val             1    1[COMMON] unsigned char 
  2918 ;;  i               1    2[COMMON] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2928 ;;      Params:         0       0       0       0
  2929 ;;      Locals:         2       0       0       0
  2930 ;;      Temps:          1       0       0       0
  2931 ;;      Totals:         3       0       0       0
  2932 ;;Total ram usage:        3 bytes
  2933 ;; Hardware stack levels used: 1
  2934 ;; This function calls:
  2935 ;;		Nothing
  2936 ;; This function is called by:
  2937 ;;		_lcd_cmd
  2938 ;;		_lcd_dat
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           
  2943                           ;psect for function _lcd_wr
  2944  053D                     _lcd_wr:
  2945                           
  2946                           ;incstack = 0
  2947                           ; Regs used in _lcd_wr: [wreg+status,2+status,0]
  2948                           ;lcd_wr@val stored from wreg
  2949  053D  00F1               	movwf	lcd_wr@val
  2950  053E                     l1160:
  2951                           
  2952                           ;lcd.c: 24: void lcd_wr(unsigned char val);lcd.c: 25: {;lcd.c: 26:   unsigned char i;;lc
      +                          d.c: 28:   RB4=0;
  2953  053E  1283               	bcf	3,5	;RP0=0, select bank0
  2954  053F  1303               	bcf	3,6	;RP1=0, select bank0
  2955  0540  1206               	bcf	6,4	;volatile
  2956  0541                     l1162:
  2957                           
  2958                           ;lcd.c: 30:   for(i=0;i<8;i++)
  2959  0541  01F2               	clrf	lcd_wr@i
  2960  0542                     l1168:
  2961                           
  2962                           ;lcd.c: 31:   {;lcd.c: 32:     RB3=((val>>(7-i))&0x01);
  2963  0542  0871               	movf	lcd_wr@val,w
  2964  0543  00F0               	movwf	??_lcd_wr
  2965  0544  0872               	movf	lcd_wr@i,w
  2966  0545  3C07               	sublw	7
  2967  0546  3E01               	addlw	1
  2968  0547  2D4A               	goto	u564
  2969  0548                     u565:
  2970  0548  1003               	clrc
  2971  0549  0CF0               	rrf	??_lcd_wr,f
  2972  054A                     u564:
  2973  054A  3EFF               	addlw	-1
  2974  054B  1D03               	skipz
  2975  054C  2D48               	goto	u565
  2976  054D  1870               	btfsc	??_lcd_wr,0
  2977  054E  2D50               	goto	u571
  2978  054F  2D54               	goto	u570
  2979  0550                     u571:
  2980  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2982  0552  1586               	bsf	6,3	;volatile
  2983  0553  2D57               	goto	u584
  2984  0554                     u570:
  2985  0554  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0555  1303               	bcf	3,6	;RP1=0, select bank0
  2987  0556  1186               	bcf	6,3	;volatile
  2988  0557                     u584:
  2989  0557                     l1170:
  2990                           
  2991                           ;lcd.c: 33:     RB4=1;
  2992  0557  1606               	bsf	6,4	;volatile
  2993  0558                     l1172:
  2994                           
  2995                           ;lcd.c: 34:     RB4=0;
  2996  0558  1206               	bcf	6,4	;volatile
  2997                           
  2998                           ;lcd.c: 35:   }
  2999  0559  3001               	movlw	1
  3000  055A  00F0               	movwf	??_lcd_wr
  3001  055B  0870               	movf	??_lcd_wr,w
  3002  055C  07F2               	addwf	lcd_wr@i,f
  3003  055D                     l1174:
  3004  055D  3008               	movlw	8
  3005  055E  0272               	subwf	lcd_wr@i,w
  3006  055F  1C03               	skipc
  3007  0560  2D62               	goto	u591
  3008  0561  2D63               	goto	u590
  3009  0562                     u591:
  3010  0562  2D42               	goto	l1168
  3011  0563                     u590:
  3012  0563                     l13:
  3013  0563  0008               	return
  3014  0564                     __end_of_lcd_wr:
  3015  007E                     btemp	set	126	;btemp
  3016  007E                     wtemp0	set	126
  3017                           
  3018                           	psect	config
  3019                           
  3020                           ;Config register CONFIG @ 0x2007
  3021                           ;	Oscillator Selection bits
  3022                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  3023                           ;	Watchdog Timer Enable bit
  3024                           ;	WDTE = OFF, WDT disabled
  3025                           ;	Power-up Timer Enable bit
  3026                           ;	PWRTE = OFF, PWRT disabled
  3027                           ;	RA5/MCLR/VPP Pin Function Select bit
  3028                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  3029                           ;	Brown-out Detect Enable bit
  3030                           ;	BOREN = OFF, BOD disabled
  3031                           ;	Low-Voltage Programming Enable bit
  3032                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  3033                           ;	Data EE Memory Code Protection bit
  3034                           ;	CPD = OFF, Data memory code protection off
  3035                           ;	Flash Program Memory Code Protection bit
  3036                           ;	CP = OFF, Code protection off
  3037  2007                     	org	8199
  3038  2007  3F18               	dw	16152

Data Sizes:
    Strings     125
    Constant    4
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     28      28
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    Questao2@infoDigitada	PTR unsigned char  size(1) Largest target is 1
		 -> main@infoDigitada(BANK0[1]), 

    Questao2@modoOperacao	PTR unsigned char  size(1) Largest target is 1
		 -> main@modoOperacao(BANK0[1]), 

    lcd_str@str	PTR const unsigned char  size(1) Largest target is 45
		 -> STR_5(CODE[15]), STR_4(CODE[18]), STR_3(CODE[24]), STR_2(CODE[23]), 
		 -> STR_1(CODE[45]), 


Critical Paths under _main in COMMON

    _main->_Questao2
    _main->_tc_tecla
    _tc_tecla->___bmul
    _lcd_init->_lcd_cmd
    _exibirMensagemDigitarPin->_lcd_str
    _exibirMensagemAcessoPermitido->_lcd_str
    _exibirMensagemAcessoNegado->_lcd_str
    _exibirMensagemDigitarId->_lcd_str
    _exibirMensagemInicial->_lcd_str
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                29    29      0    5269
                                              0 BANK0     28    28      0
                           _Questao1
                           _Questao2
                        _eeprom_read
                       _eeprom_write
         _exibirMensagemAcessoNegado
      _exibirMensagemAcessoPermitido
           _exibirMensagemDigitarPin
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             9     7      2     759
                                              4 COMMON     9     7      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     112
                                              6 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _exibirMensagemDigitarPin                             0     0      0     479
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _exibirMensagemAcessoPermitido                        0     0      0     479
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _exibirMensagemAcessoNegado                           0     0      0     479
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _eeprom_write                                         3     2      1     120
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Questao2                                             4     2      2     831
                                              9 COMMON     4     2      2
            _exibirMensagemDigitarId
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _exibirMensagemDigitarId                              0     0      0     479
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (1) _Questao1                                             2     1      1     599
                                              9 COMMON     2     1      1
              _exibirMensagemInicial
 ---------------------------------------------------------------------------------
 (2) _exibirMensagemInicial                                0     0      0     479
                            _lcd_cmd
                            _lcd_str
 ---------------------------------------------------------------------------------
 (2) _lcd_str                                              3     3      0     367
                                              6 COMMON     3     3      0
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (1) _lcd_dat                                              3     3      0     112
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0     112
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Questao1
     _exibirMensagemInicial
       _lcd_cmd
         _lcd_wr
       _lcd_str
         _lcd_dat
           _lcd_wr
   _Questao2
     _exibirMensagemDigitarId
       _lcd_cmd
       _lcd_str
     _lcd_cmd
   _eeprom_read
   _eeprom_write
   _exibirMensagemAcessoNegado
     _lcd_cmd
     _lcd_str
   _exibirMensagemAcessoPermitido
     _lcd_cmd
     _lcd_str
   _exibirMensagemDigitarPin
     _lcd_cmd
     _lcd_str
   _lcd_cmd
   _lcd_dat
   _lcd_init
     _lcd_cmd
   _tc_tecla
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     1C      1C       3       35.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 29 00:32:29 2021

                                     pc 0002                          ___bmul@product 0072  
                                    l13 0563                                      l22 05BC  
                                    l16 051A                                      l19 053C  
                                    l43 0680                                      l28 04DA  
                                    l54 062F                                      l47 0604  
                                    l72 069B                                      fsr 0004  
                                   l112 06F1                                     l130 0793  
                                   l152 0475                                     l161 047E  
                                   l155 0490                                     l149 046C  
                                   l165 049E                                     l262 04A0  
                                   l158 0487                                     l318 04C4  
                                   l264 04AF                                     l169 04F8  
                                   l281 0565                                     l282 0565  
                                   l285 057B                                     l288 058C  
                                   _RA0 0028                                     _RB3 0033  
                                   _RB4 0034                                     _RB5 0035  
                                   _RB6 0036                                     _RB7 0037  
                                   u600 04DA                                     u601 04D9  
                                   u610 04B6                                     u611 04B5  
                                   u620 04C3                                     u700 062E  
                                   u621 04C2                                     u701 062D  
                                   u710 0633                                     u630 05D8  
                                   u711 0632                                     u631 05D7  
                                   u800 056B                                     u720 0642  
                                   u640 05E7                                     u801 056A  
                                   u721 0641                                     u641 05E6  
                                   u570 0554                                     u810 057A  
                                   u730 0649                                     u650 05EE  
                                   u571 0550                                     u811 0579  
                                   u731 0648                                     u651 05ED  
                                   u564 054A                                     u820 058B  
                                   u740 065E                                     u660 0603  
                                   u900 06F0                                     u565 0548  
                                   u821 058A                                     u741 065D  
                                   u661 0602                                     u901 06EF  
                                   u590 0563                                     u830 0498  
                                   u750 0671                                     u670 0608  
                                   u910 0715                                     u591 0562  
                                   u831 0497                                     u751 0670  
                                   u671 0607                                     u911 0714  
                                   u584 0557                                     u840 049D  
                                   u760 068A                                     u680 0617  
                                   u920 071B                                     u841 049C  
                                   u761 0689                                     u681 0616  
                                   u921 071A                                     u850 04E2  
                                   u770 0690                                     u690 061E  
                                   u930 0720                                     u851 04E1  
                                   u771 068F                                     u691 061D  
                                   u931 071F                                     u860 04EB  
                                   u780 0696                                     u940 0732  
                                   u861 04EA                                     u781 0695  
                                   u765 0686                                     u941 0731  
                                   u790 04A7                                     u950 073C  
                                   u870 06CD                                     u791 04A6  
                                   u951 073B                                     u871 06CC  
                                   u960 0751                                     u961 0750  
                                   u970 0761                                     u890 06E7  
                                   u971 0760                                     u891 06E6  
                                   u885 06D3                                     u990 077C  
                                   u991 077B                                     u985 076E  
 __end_of_exibirMensagemAcessoPermitido 0488  __size_of_exibirMensagemAcessoPermitido 0009  
         _exibirMensagemAcessoPermitido 047F                                     fsr0 0004  
                         Questao1@tecla 007A                                     indf 0000  
                         Questao2@tecla 007C                                    l1200 050E  
                                  l1202 0517                                    l1210 04D1  
                                  l1204 04C6                                    l1212 0468  
                                  l1220 04B1                                    l1300 0633  
                                  l1206 04C8                                    l1214 046A  
                                  l1230 04C3                                    l1222 04B2  
                                  l1310 064E                                    l1302 063C  
                                  l1160 053E                                    l1208 04CD  
                                  l1216 046D                                    l1240 059D  
                                  l1224 04B6                                    l1312 0658  
                                  l1320 0671                                    l1400 06B7  
                                  l1170 0557                                    l1162 0541  
                                  l1218 0473                                    l1330 04A7  
                                  l1250 05B4                                    l1242 059F  
                                  l1234 058D                                    l1226 04BA  
                                  l1322 068A                                    l1306 0643  
                                  l1314 065F                                    l1410 06C8  
                                  l1402 06B9                                    l1172 0558  
                                  l1180 0521                                    l1340 0576  
                                  l1252 05B6                                    l1244 05A9  
                                  l1236 0591                                    l1228 04BC  
                                  l1324 0690                                    l1316 0667  
                                  l1308 0649                                    l1260 05BF  
                                  l1500 07BC                                    l1420 06CF  
                                  l1404 06BB                                    l1174 055D  
                                  l1190 04FA                                    l1182 0524  
                                  l1350 0585                                    l1342 057A  
                                  l1334 056B                                    l1254 05B8  
                                  l1246 05B0                                    l1238 059A  
                                  l1326 0696                                    l1318 066B  
                                  l1270 05CB                                    l1262 05C3  
                                  l1510 07D9                                    l1502 07C4  
                                  l1430 070D                                    l1422 06DB  
                                  l1414 06CE                                    l1406 06BD  
                                  l1168 0542                                    l1192 04FD  
                                  l1184 052D                                    l1176 051C  
                                  l1360 04DC                                    l1352 058B  
                                  l1344 057F                                    l1336 056F  
                                  l1256 05BA                                    l1248 05B2  
                                  l1280 05E8                                    l1272 05D4  
                                  l1264 05CA                                    l1520 07F6  
                                  l1504 07C9                                    l1512 07E0  
                                  l1440 072A                                    l1432 0715  
                                  l1424 06E1                                    l1408 06C4  
                                  l1194 04FF                                    l1186 0530  
                                  l1178 051F                                    l1354 0492  
                                  l1362 04E2                                    l1346 0583  
                                  l1338 0573                                    l1370 0488  
                                  l1290 0611                                    l1282 05EE  
                                  l1274 05D8                                    l1258 05BD  
                                  l1514 07E6                                    l1506 07CF  
                                  l1442 072C                                    l1434 071B  
                                  l1426 06E7                                    l1196 0502  
                                  l1188 0539                                    l1356 0498  
                                  l1364 04EB                                    l1348 0584  
                                  l1380 0476                                    l1372 048C  
                                  l1284 05F3                                    l1276 05E1  
                                  l1516 07EC                                    l1508 07D7  
                                  l1452 073D                                    l1444 0732  
                                  l1436 0720                                    l1428 06F1  
                                  l1198 050B                                    l1358 049D  
                                  l1366 04F5                                    l1382 047C  
                                  l1374 048E                                    l1294 0618  
                                  l1286 05FD                                    l1518 07F4  
                                  l1470 0762                                    l1462 0752  
                                  l1454 0742                                    l1446 0732  
                                  l1438 0724                                    l1390 06A9  
                                  l1368 04F6                                    l1376 047F  
                                  l1296 061E                                    l1288 0608  
                                  l1480 077C                                    l1472 0765  
                                  l1464 0757                                    l1448 0736  
                                  l1392 06AD                                    l1384 069C  
                                  l1378 0485                                    l1298 0628  
                                  l1490 07AA                                    l1482 0798  
                                  l1466 075B                                    l1458 0747  
                                  l1394 06AF                                    l1386 06A2  
                                  l1484 079E                                    l1492 07B0  
                                  l1468 0761                                    l1396 06B4  
                                  l1388 06A5                                    l1494 07B6  
                                  l1486 07A4                                    l1478 0768  
                                  l1398 06B5                                    l1496 07BB  
                                  l1488 07A9                                    l1498 07BC  
                                  STR_1 000B                                    STR_2 0050  
                                  STR_3 0038                                    STR_4 0067  
                                  STR_5 0079                                    u1010 0793  
                                  u1011 0792                                    u1100 07EC  
                                  u1020 07A4                                    u1101 07EB  
                                  u1021 07A3                                    u1005 0784  
                                  u1030 07A9                                    u1031 07A8  
                                  u1040 07B6                                    u1041 07B5  
                                  u1050 07BB                                    u1051 07BA  
                                  u1060 07C4                                    u1117 05DC  
                                  u1061 07C3                                    u1070 07C9  
                                  u1207 0506                                    u1127 060C  
                                  u1071 07C8                                    u1080 07CF  
                                  u1217 0512                                    u1137 0637  
                                  u1081 07CE                                    u1090 07E6  
                                  u1147 0675                                    u1091 07E5  
                                  u1157 0595                                    u1167 05A3  
                                  u1177 05AB                                    u1187 0528  
                                  u1197 0534                          ??_eeprom_write 0071  
    __end_of_exibirMensagemAcessoNegado 047F              _exibirMensagemAcessoNegado 0476  
                                  _main 069C                                    btemp 007E  
               _exibirMensagemDigitarId 046D                                    start 0000  
                     ___bmul@multiplier 0073                                   ?_main 0070  
                                 _EEADR 009B                                   _CMCON 001F  
                                 _PORTA 0005                                   _PORTB 0006  
                                 _TRISA 0085                                   _TRISB 0086  
                       __end_of_lcd_dat 053D                         __end_of_lcd_cmd 051B  
                       __end_of_lcd_str 04DB                                   _linha 0007  
                                 main@i 0033                                   main@j 0034  
                                 main@k 003A                                   pclath 000A  
              _exibirMensagemDigitarPin 0488                                   status 0003  
                                 wtemp0 007E                         __initialization 07FE  
                          __end_of_main 07FE                                  ??_main 0020  
                       tc_tecla@timeout 0074                        __end_of_Questao1 049F  
                      __end_of_Questao2 04F9               main@countRecordedAccesses 0030  
                                _EEDATA 009A                                  _EECON1 009C  
                                _EECON2 009D               ??_exibirMensagemDigitarId 0079  
                  __size_of_eeprom_read 0011                        __end_of_lcd_init 05BD  
                                ___bmul 04B0                                  _lcd_wr 053D  
                  __end_of_eeprom_write 058D                               ??_lcd_dat 0073  
                             ??_lcd_cmd 0073                        __end_of_tc_tecla 069C  
                             ??_lcd_str 0076                 __end_of__initialization 07FE  
                       eeprom_read@addr 0071                     ___bmul@multiplicand 0070  
                        __pcstackCOMMON 0070                   _exibirMensagemInicial 0468  
                         __end_of_linha 000B         __end_of_exibirMensagemDigitarId 0476  
                     eeprom_write@value 0070             ?_exibirMensagemAcessoNegado 0070  
                           tc_tecla@ret 007B                             tc_tecla@tmp 007A  
                            __pmaintext 069C                                 ?___bmul 0070  
                             ?_Questao1 0079                               ?_Questao2 0079  
                               ?_lcd_wr 0070              ??_exibirMensagemDigitarPin 0079  
                             ?_lcd_init 0070                              __stringtab 0001  
                             ?_tc_tecla 0074                  ?_exibirMensagemInicial 0070  
                 __size_of_eeprom_write 0029                         __size_of___bmul 0015  
                            ??_Questao1 007A                              ??_Questao2 007B  
                       __size_of_lcd_wr 0027                        main@infoDigitada 0038  
                               __ptext1 05BD                                 __ptext2 04B0  
                               __ptext3 058D                                 __ptext4 0488  
                               __ptext5 047F                                 __ptext6 0476  
                               __ptext7 0564                                 __ptext8 049F  
                               __ptext9 04DB                                 _lcd_dat 051B  
                               _lcd_cmd 04F9                    Questao2@infoDigitada 007A  
                               _lcd_str 04C5                     main@countSimbolosId 0037  
                               lcd_wr@i 0072                                 main@aux 003B  
                            ??_lcd_init 0076                          main@simbolosId 0022  
                  end_of_initialization 07FE                    Questao1@modoOperacao 0079  
                          _eeprom_write 0564                              ??_tc_tecla 0076  
                            lcd_dat@val 0075                              lcd_cmd@val 0075  
                         ??_eeprom_read 0070                              lcd_str@str 0078  
                        __end_of___bmul 04C5                          __end_of_lcd_wr 0564  
      __end_of_exibirMensagemDigitarPin 0491                     start_initialization 07FE  
              ?_exibirMensagemDigitarId 0070                        main@modoOperacao 0036  
        ?_exibirMensagemAcessoPermitido 0070                    Questao2@modoOperacao 0079  
                              ??___bmul 0071                     __end_of_eeprom_read 04B0  
                              ??_lcd_wr 0070                       __size_of_Questao1 000E  
                     __size_of_Questao2 001E                               ___latbits 0000  
                         __pcstackBANK0 0020                        eeprom_write@addr 0072  
                     __size_of_lcd_init 0030                 ??_exibirMensagemInicial 0079  
                            tc_tecla@to 0078                       __size_of_tc_tecla 00DF  
                             __pstrings 0001                                ?_lcd_dat 0070  
                              ?_lcd_cmd 0070                                ?_lcd_str 0070  
                           _eeprom_read 049F       __size_of_exibirMensagemDigitarPin 0009  
             ?_exibirMensagemDigitarPin 0070                                _PCONbits 008E  
                           __stringbase 0006                               main@i_149 0032  
                             main@j_150 0035                               lcd_wr@val 0071  
                             main@tecla 0039                              _EECON1bits 009C  
                              _Questao1 0491                                _Questao2 04DB  
                    __end_of__stringtab 0007                        __size_of_lcd_dat 0022  
                      __size_of_lcd_cmd 0022                        __size_of_lcd_str 0016  
                             tc_tecla@i 007C                                __ptext10 046D  
                              __ptext11 0491                                __ptext12 0468  
                              __ptext13 04C5                                __ptext14 051B  
                              __ptext15 04F9                                __ptext16 053D  
                              _lcd_init 058D                           __size_of_main 0162  
          ??_exibirMensagemAcessoNegado 0079                                _tc_tecla 05BD  
      __size_of_exibirMensagemDigitarId 0009                    main@countSimbolosPin 0031  
       ??_exibirMensagemAcessoPermitido 0079                                lcd_str@i 0077  
                       main@simbolosPin 0029                              _INTCONbits 000B  
   __size_of_exibirMensagemAcessoNegado 0009          __size_of_exibirMensagemInicial 0005  
                             stringcode 0001           __end_of_exibirMensagemInicial 046D  
                              stringdir 0001                                stringtab 0001  
                         ?_eeprom_write 0070                              _STATUSbits 0003  
                          ?_eeprom_read 0070  
